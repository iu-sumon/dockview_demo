{"ast":null,"code":"var _jsxFileName = \"E:\\\\dockview.demo\\\\src\\\\components\\\\DockviewComponent.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef } from 'react';\nimport { DockviewReact } from 'dockview';\nimport { v4 as uuidv4 } from 'uuid';\nimport PanelContent from '../components/';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DockviewComponent = () => {\n  _s();\n  const dockviewRef = useRef(null);\n  const onReady = event => {\n    dockviewRef.current = event;\n\n    // Add initial panels\n    const panel1 = event.api.addPanel({\n      id: uuidv4(),\n      component: 'panelContent',\n      title: 'Panel 1',\n      params: {\n        title: 'First Panel',\n        content: 'Welcome to Dockview!',\n        onPopout: () => handlePopout(panel1),\n        onMaximize: () => handleMaximize(panel1)\n      }\n    });\n    const panel2 = event.api.addPanel({\n      id: uuidv4(),\n      component: 'panelContent',\n      title: 'Panel 2',\n      position: {\n        direction: 'right'\n      },\n      params: {\n        title: 'Second Panel',\n        content: 'This is another panel.',\n        onPopout: () => handlePopout(panel2),\n        onMaximize: () => handleMaximize(panel2)\n      }\n    });\n    const panel3 = event.api.addPanel({\n      id: uuidv4(),\n      component: 'panelContent',\n      title: 'Panel 3',\n      position: {\n        direction: 'below'\n      },\n      params: {\n        title: 'Third Panel',\n        content: 'You can drag and resize panels!',\n        onPopout: () => handlePopout(panel3),\n        onMaximize: () => handleMaximize(panel3)\n      }\n    });\n  };\n  const handlePopout = panel => {\n    if (dockviewRef.current) {\n      dockviewRef.current.api.addPopoutPanel(panel, {\n        position: 'center',\n        size: {\n          width: 600,\n          height: 400\n        }\n      });\n    }\n  };\n  const handleMaximize = panel => {\n    if (dockviewRef.current) {\n      const isMaximized = panel.api.isMaximized;\n      if (isMaximized) {\n        panel.api.exitMaximized();\n      } else {\n        panel.api.maximize();\n      }\n    }\n  };\n  const addPanel = () => {\n    if (dockviewRef.current) {\n      const newPanel = dockviewRef.current.api.addPanel({\n        id: uuidv4(),\n        component: 'panelContent',\n        title: `Panel ${dockviewRef.current.api.panels.length + 1}`,\n        params: {\n          title: `New Panel ${dockviewRef.current.api.panels.length + 1}`,\n          content: 'This is a dynamically added panel.',\n          onPopout: () => handlePopout(newPanel),\n          onMaximize: () => handleMaximize(newPanel)\n        }\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '100%',\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '10px',\n        background: '#e4e4e9ff',\n        display: 'flex',\n        gap: '10px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addPanel,\n        style: {\n          padding: '8px 16px',\n          background: '#007acc',\n          color: 'white',\n          border: 'none',\n          borderRadius: '4px',\n          cursor: 'pointer'\n        },\n        children: \"Add Panel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(DockviewReact, {\n        onReady: onReady,\n        components: {\n          panelContent: PanelContent\n        },\n        className: \"dockview-theme-light\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_s(DockviewComponent, \"cNJm5wNrYgM7L4KNTq2gIA3MzJM=\");\n_c = DockviewComponent;\nexport default DockviewComponent;\nvar _c;\n$RefreshReg$(_c, \"DockviewComponent\");","map":{"version":3,"names":["React","useRef","DockviewReact","v4","uuidv4","PanelContent","jsxDEV","_jsxDEV","DockviewComponent","_s","dockviewRef","onReady","event","current","panel1","api","addPanel","id","component","title","params","content","onPopout","handlePopout","onMaximize","handleMaximize","panel2","position","direction","panel3","panel","addPopoutPanel","size","width","height","isMaximized","exitMaximized","maximize","newPanel","panels","length","style","display","flexDirection","children","padding","background","gap","onClick","color","border","borderRadius","cursor","fileName","_jsxFileName","lineNumber","columnNumber","flex","components","panelContent","className","_c","$RefreshReg$"],"sources":["E:/dockview.demo/src/components/DockviewComponent.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport { DockviewReact, DockviewReadyEvent, IDockviewPanelProps } from 'dockview';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport PanelContent from '../components/'\r\n\r\nconst DockviewComponent: React.FC = () => {\r\n  const dockviewRef = useRef<any>(null);\r\n\r\n  const onReady = (event: DockviewReadyEvent) => {\r\n    dockviewRef.current = event;\r\n\r\n    // Add initial panels\r\n    const panel1 = event.api.addPanel({\r\n      id: uuidv4(),\r\n      component: 'panelContent',\r\n      title: 'Panel 1',\r\n      params: { \r\n        title: 'First Panel', \r\n        content: 'Welcome to Dockview!',\r\n        onPopout: () => handlePopout(panel1),\r\n        onMaximize: () => handleMaximize(panel1)\r\n      }\r\n    });\r\n\r\n    const panel2 = event.api.addPanel({\r\n      id: uuidv4(),\r\n      component: 'panelContent',\r\n      title: 'Panel 2',\r\n      position: { direction: 'right' },\r\n      params: { \r\n        title: 'Second Panel', \r\n        content: 'This is another panel.',\r\n        onPopout: () => handlePopout(panel2),\r\n        onMaximize: () => handleMaximize(panel2)\r\n      }\r\n    });\r\n\r\n    const panel3 = event.api.addPanel({\r\n      id: uuidv4(),\r\n      component: 'panelContent',\r\n      title: 'Panel 3',\r\n      position: { direction: 'below' },\r\n      params: { \r\n        title: 'Third Panel', \r\n        content: 'You can drag and resize panels!',\r\n        onPopout: () => handlePopout(panel3),\r\n        onMaximize: () => handleMaximize(panel3)\r\n      }\r\n    });\r\n  };\r\n\r\n  const handlePopout = (panel: any) => {\r\n    if (dockviewRef.current) {\r\n      dockviewRef.current.api.addPopoutPanel(panel, {\r\n        position: 'center',\r\n        size: { width: 600, height: 400 }\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleMaximize = (panel: any) => {\r\n    if (dockviewRef.current) {\r\n      const isMaximized = panel.api.isMaximized;\r\n      \r\n      if (isMaximized) {\r\n        panel.api.exitMaximized();\r\n      } else {\r\n        panel.api.maximize();\r\n      }\r\n    }\r\n  };\r\n\r\n  const addPanel = () => {\r\n    if (dockviewRef.current) {\r\n      const newPanel = dockviewRef.current.api.addPanel({\r\n        id: uuidv4(),\r\n        component: 'panelContent',\r\n        title: `Panel ${dockviewRef.current.api.panels.length + 1}`,\r\n        params: { \r\n          title: `New Panel ${dockviewRef.current.api.panels.length + 1}`,\r\n          content: 'This is a dynamically added panel.',\r\n          onPopout: () => handlePopout(newPanel),\r\n          onMaximize: () => handleMaximize(newPanel)\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\r\n      <div style={{ padding: '10px', background: '#e4e4e9ff', display: 'flex', gap: '10px' }}>\r\n        <button onClick={addPanel} style={{ padding: '8px 16px', background: '#007acc', color: 'white', border: 'none', borderRadius: '4px', cursor: 'pointer' }}>\r\n          Add Panel\r\n        </button>\r\n      </div>\r\n      <div style={{ flex: 1 }}>\r\n        <DockviewReact\r\n          onReady={onReady}\r\n          components={{\r\n            panelContent: PanelContent\r\n          }}\r\n          className=\"dockview-theme-light\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DockviewComponent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}