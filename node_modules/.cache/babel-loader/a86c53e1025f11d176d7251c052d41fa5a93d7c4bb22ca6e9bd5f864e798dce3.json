{"ast":null,"code":"var _jsxFileName = \"E:\\\\dockview.demo\\\\src\\\\components\\\\DockviewHeaderControls.tsx\",\n  _s = $RefreshSig$();\n// DockviewHeaderControls.tsx\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Icon = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    title: props.title,\n    className: `action ${props.className || ''}`,\n    onClick: props.onClick,\n    style: {\n      cursor: 'pointer',\n      padding: '4px',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        fontSize: '18px'\n      },\n      className: \"material-symbols-outlined\",\n      children: props.icon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n_c = Icon;\nexport const DockviewHeaderControls = props => {\n  _s();\n  const [isMaximized, setIsMaximized] = React.useState(props.containerApi.hasMaximizedGroup());\n  const [isPopout, setIsPopout] = React.useState(props.api.location.type === 'popout');\n  React.useEffect(() => {\n    const disposable = props.containerApi.onDidMaximizedGroupChange(() => {\n      setIsMaximized(props.containerApi.hasMaximizedGroup());\n    });\n    const disposable2 = props.api.onDidLocationChange(() => {\n      setIsPopout(props.api.location.type === 'popout');\n    });\n    return () => {\n      disposable.dispose();\n      disposable2.dispose();\n    };\n  }, [props.containerApi, props.api]);\n  const handleMaximizeClick = () => {\n    if (props.containerApi.hasMaximizedGroup()) {\n      props.containerApi.exitMaximizedGroup();\n    } else {\n      var _props$activePanel;\n      (_props$activePanel = props.activePanel) === null || _props$activePanel === void 0 ? void 0 : _props$activePanel.api.maximize();\n    }\n  };\n  const handlePopoutClick = () => {\n    if (props.api.location.type !== 'popout') {\n      props.containerApi.addPopoutGroup(props.group);\n    } else {\n      // If already in popout, move back to main window\n      props.api.moveTo({\n        position: 'right'\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      gap: '8px',\n      padding: '0px 8px',\n      height: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Icon, {\n      title: isPopout ? 'Close Window' : 'Open In New Window',\n      icon: isPopout ? 'close_fullscreen' : 'open_in_new',\n      onClick: handlePopoutClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), !isPopout && /*#__PURE__*/_jsxDEV(Icon, {\n      title: isMaximized ? 'Minimize View' : 'Maximize View',\n      icon: isMaximized ? 'collapse_content' : 'expand_content',\n      onClick: handleMaximizeClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n_s(DockviewHeaderControls, \"APRhzcl5YX2kqE27Gvm97IKg22k=\");\n_c2 = DockviewHeaderControls;\nvar _c, _c2;\n$RefreshReg$(_c, \"Icon\");\n$RefreshReg$(_c2, \"DockviewHeaderControls\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Icon","props","title","className","onClick","style","cursor","padding","display","alignItems","justifyContent","children","fontSize","icon","fileName","_jsxFileName","lineNumber","columnNumber","_c","DockviewHeaderControls","_s","isMaximized","setIsMaximized","useState","containerApi","hasMaximizedGroup","isPopout","setIsPopout","api","location","type","useEffect","disposable","onDidMaximizedGroupChange","disposable2","onDidLocationChange","dispose","handleMaximizeClick","exitMaximizedGroup","_props$activePanel","activePanel","maximize","handlePopoutClick","addPopoutGroup","group","moveTo","position","gap","height","_c2","$RefreshReg$"],"sources":["E:/dockview.demo/src/components/DockviewHeaderControls.tsx"],"sourcesContent":["// DockviewHeaderControls.tsx\r\nimport React from 'react';\r\nimport { IDockviewHeaderActionsProps } from 'dockview';\r\n\r\nconst Icon = (props: {\r\n    icon: string;\r\n    title?: string;\r\n    onClick?: (event: React.MouseEvent) => void;\r\n    className?: string;\r\n}) => {\r\n    return (\r\n        <div \r\n            title={props.title} \r\n            className={`action ${props.className || ''}`} \r\n            onClick={props.onClick}\r\n            style={{ \r\n                cursor: 'pointer', \r\n                padding: '4px', \r\n                display: 'flex', \r\n                alignItems: 'center', \r\n                justifyContent: 'center' \r\n            }}\r\n        >\r\n            <span\r\n                style={{ fontSize: '18px' }}\r\n                className=\"material-symbols-outlined\"\r\n            >\r\n                {props.icon}\r\n            </span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const DockviewHeaderControls = (props: IDockviewHeaderActionsProps) => {\r\n    const [isMaximized, setIsMaximized] = React.useState<boolean>(\r\n        props.containerApi.hasMaximizedGroup()\r\n    );\r\n\r\n    const [isPopout, setIsPopout] = React.useState<boolean>(\r\n        props.api.location.type === 'popout'\r\n    );\r\n\r\n    React.useEffect(() => {\r\n        const disposable = props.containerApi.onDidMaximizedGroupChange(() => {\r\n            setIsMaximized(props.containerApi.hasMaximizedGroup());\r\n        });\r\n\r\n        const disposable2 = props.api.onDidLocationChange(() => {\r\n            setIsPopout(props.api.location.type === 'popout');\r\n        });\r\n\r\n        return () => {\r\n            disposable.dispose();\r\n            disposable2.dispose();\r\n        };\r\n    }, [props.containerApi, props.api]);\r\n\r\n    const handleMaximizeClick = () => {\r\n        if (props.containerApi.hasMaximizedGroup()) {\r\n            props.containerApi.exitMaximizedGroup();\r\n        } else {\r\n            props.activePanel?.api.maximize();\r\n        }\r\n    };\r\n\r\n    const handlePopoutClick = () => {\r\n        if (props.api.location.type !== 'popout') {\r\n            props.containerApi.addPopoutGroup(props.group);\r\n        } else {\r\n            // If already in popout, move back to main window\r\n            props.api.moveTo({ position: 'right' });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                gap: '8px',\r\n                padding: '0px 8px',\r\n                height: '100%',\r\n            }}\r\n        >\r\n            {/* Popout/Close Window Button */}\r\n            <Icon\r\n                title={isPopout ? 'Close Window' : 'Open In New Window'}\r\n                icon={isPopout ? 'close_fullscreen' : 'open_in_new'}\r\n                onClick={handlePopoutClick}\r\n            />\r\n            \r\n            {/* Maximize/Minimize Button (only show in main window) */}\r\n            {!isPopout && (\r\n                <Icon\r\n                    title={isMaximized ? 'Minimize View' : 'Maximize View'}\r\n                    icon={isMaximized ? 'collapse_content' : 'expand_content'}\r\n                    onClick={handleMaximizeClick}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}