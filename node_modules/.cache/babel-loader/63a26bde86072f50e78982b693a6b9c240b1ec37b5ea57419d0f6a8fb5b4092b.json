{"ast":null,"code":"import { BasePanelView } from './basePanelView';\nimport { GridviewPanelApiImpl } from '../api/gridviewPanelApi';\nimport { Emitter } from '../events';\nexport class GridviewPanel extends BasePanelView {\n  get priority() {\n    return this._priority;\n  }\n  get snap() {\n    return this._snap;\n  }\n  get minimumWidth() {\n    /**\n     * defer to protected function to allow subclasses to override easily.\n     * see https://github.com/microsoft/TypeScript/issues/338\n     */\n    return this.__minimumWidth();\n  }\n  get minimumHeight() {\n    /**\n     * defer to protected function to allow subclasses to override easily.\n     * see https://github.com/microsoft/TypeScript/issues/338\n     */\n    return this.__minimumHeight();\n  }\n  get maximumHeight() {\n    /**\n     * defer to protected function to allow subclasses to override easily.\n     * see https://github.com/microsoft/TypeScript/issues/338\n     */\n    return this.__maximumHeight();\n  }\n  get maximumWidth() {\n    /**\n     * defer to protected function to allow subclasses to override easily.\n     * see https://github.com/microsoft/TypeScript/issues/338\n     */\n    return this.__maximumWidth();\n  }\n  __minimumWidth() {\n    const width = typeof this._minimumWidth === 'function' ? this._minimumWidth() : this._minimumWidth;\n    if (width !== this._evaluatedMinimumWidth) {\n      this._evaluatedMinimumWidth = width;\n      this.updateConstraints();\n    }\n    return width;\n  }\n  __maximumWidth() {\n    const width = typeof this._maximumWidth === 'function' ? this._maximumWidth() : this._maximumWidth;\n    if (width !== this._evaluatedMaximumWidth) {\n      this._evaluatedMaximumWidth = width;\n      this.updateConstraints();\n    }\n    return width;\n  }\n  __minimumHeight() {\n    const height = typeof this._minimumHeight === 'function' ? this._minimumHeight() : this._minimumHeight;\n    if (height !== this._evaluatedMinimumHeight) {\n      this._evaluatedMinimumHeight = height;\n      this.updateConstraints();\n    }\n    return height;\n  }\n  __maximumHeight() {\n    const height = typeof this._maximumHeight === 'function' ? this._maximumHeight() : this._maximumHeight;\n    if (height !== this._evaluatedMaximumHeight) {\n      this._evaluatedMaximumHeight = height;\n      this.updateConstraints();\n    }\n    return height;\n  }\n  get isActive() {\n    return this.api.isActive;\n  }\n  get isVisible() {\n    return this.api.isVisible;\n  }\n  constructor(id, component, options, api) {\n    super(id, component, api !== null && api !== void 0 ? api : new GridviewPanelApiImpl(id, component));\n    this._evaluatedMinimumWidth = 0;\n    this._evaluatedMaximumWidth = Number.MAX_SAFE_INTEGER;\n    this._evaluatedMinimumHeight = 0;\n    this._evaluatedMaximumHeight = Number.MAX_SAFE_INTEGER;\n    this._minimumWidth = 0;\n    this._minimumHeight = 0;\n    this._maximumWidth = Number.MAX_SAFE_INTEGER;\n    this._maximumHeight = Number.MAX_SAFE_INTEGER;\n    this._snap = false;\n    this._onDidChange = new Emitter();\n    this.onDidChange = this._onDidChange.event;\n    if (typeof (options === null || options === void 0 ? void 0 : options.minimumWidth) === 'number') {\n      this._minimumWidth = options.minimumWidth;\n    }\n    if (typeof (options === null || options === void 0 ? void 0 : options.maximumWidth) === 'number') {\n      this._maximumWidth = options.maximumWidth;\n    }\n    if (typeof (options === null || options === void 0 ? void 0 : options.minimumHeight) === 'number') {\n      this._minimumHeight = options.minimumHeight;\n    }\n    if (typeof (options === null || options === void 0 ? void 0 : options.maximumHeight) === 'number') {\n      this._maximumHeight = options.maximumHeight;\n    }\n    this.api.initialize(this); // TODO: required to by-pass 'super before this' requirement\n    this.addDisposables(this.api.onWillVisibilityChange(event => {\n      const {\n        isVisible\n      } = event;\n      const {\n        accessor\n      } = this._params;\n      accessor.setVisible(this, isVisible);\n    }), this.api.onActiveChange(() => {\n      const {\n        accessor\n      } = this._params;\n      accessor.doSetGroupActive(this);\n    }), this.api.onDidConstraintsChangeInternal(event => {\n      if (typeof event.minimumWidth === 'number' || typeof event.minimumWidth === 'function') {\n        this._minimumWidth = event.minimumWidth;\n      }\n      if (typeof event.minimumHeight === 'number' || typeof event.minimumHeight === 'function') {\n        this._minimumHeight = event.minimumHeight;\n      }\n      if (typeof event.maximumWidth === 'number' || typeof event.maximumWidth === 'function') {\n        this._maximumWidth = event.maximumWidth;\n      }\n      if (typeof event.maximumHeight === 'number' || typeof event.maximumHeight === 'function') {\n        this._maximumHeight = event.maximumHeight;\n      }\n    }), this.api.onDidSizeChange(event => {\n      this._onDidChange.fire({\n        height: event.height,\n        width: event.width\n      });\n    }), this._onDidChange);\n  }\n  setVisible(isVisible) {\n    this.api._onDidVisibilityChange.fire({\n      isVisible\n    });\n  }\n  setActive(isActive) {\n    this.api._onDidActiveChange.fire({\n      isActive\n    });\n  }\n  init(parameters) {\n    if (parameters.maximumHeight) {\n      this._maximumHeight = parameters.maximumHeight;\n    }\n    if (parameters.minimumHeight) {\n      this._minimumHeight = parameters.minimumHeight;\n    }\n    if (parameters.maximumWidth) {\n      this._maximumWidth = parameters.maximumWidth;\n    }\n    if (parameters.minimumWidth) {\n      this._minimumWidth = parameters.minimumWidth;\n    }\n    this._priority = parameters.priority;\n    this._snap = !!parameters.snap;\n    super.init(parameters);\n    if (typeof parameters.isVisible === 'boolean') {\n      this.setVisible(parameters.isVisible);\n    }\n  }\n  updateConstraints() {\n    this.api._onDidConstraintsChange.fire({\n      minimumWidth: this._evaluatedMinimumWidth,\n      maximumWidth: this._evaluatedMaximumWidth,\n      minimumHeight: this._evaluatedMinimumHeight,\n      maximumHeight: this._evaluatedMaximumHeight\n    });\n  }\n  toJSON() {\n    const state = super.toJSON();\n    const maximum = value => value === Number.MAX_SAFE_INTEGER ? undefined : value;\n    const minimum = value => value <= 0 ? undefined : value;\n    return Object.assign(Object.assign({}, state), {\n      minimumHeight: minimum(this.minimumHeight),\n      maximumHeight: maximum(this.maximumHeight),\n      minimumWidth: minimum(this.minimumWidth),\n      maximumWidth: maximum(this.maximumWidth),\n      snap: this.snap,\n      priority: this.priority\n    });\n  }\n}","map":{"version":3,"names":["BasePanelView","GridviewPanelApiImpl","Emitter","GridviewPanel","priority","_priority","snap","_snap","minimumWidth","__minimumWidth","minimumHeight","__minimumHeight","maximumHeight","__maximumHeight","maximumWidth","__maximumWidth","width","_minimumWidth","_evaluatedMinimumWidth","updateConstraints","_maximumWidth","_evaluatedMaximumWidth","height","_minimumHeight","_evaluatedMinimumHeight","_maximumHeight","_evaluatedMaximumHeight","isActive","api","isVisible","constructor","id","component","options","Number","MAX_SAFE_INTEGER","_onDidChange","onDidChange","event","initialize","addDisposables","onWillVisibilityChange","accessor","_params","setVisible","onActiveChange","doSetGroupActive","onDidConstraintsChangeInternal","onDidSizeChange","fire","_onDidVisibilityChange","setActive","_onDidActiveChange","init","parameters","_onDidConstraintsChange","toJSON","state","maximum","value","undefined","minimum","Object","assign"],"sources":["E:/dockview.demo/node_modules/dockview-core/dist/esm/gridview/gridviewPanel.js"],"sourcesContent":["import { BasePanelView, } from './basePanelView';\nimport { GridviewPanelApiImpl, } from '../api/gridviewPanelApi';\nimport { Emitter } from '../events';\nexport class GridviewPanel extends BasePanelView {\n    get priority() {\n        return this._priority;\n    }\n    get snap() {\n        return this._snap;\n    }\n    get minimumWidth() {\n        /**\n         * defer to protected function to allow subclasses to override easily.\n         * see https://github.com/microsoft/TypeScript/issues/338\n         */\n        return this.__minimumWidth();\n    }\n    get minimumHeight() {\n        /**\n         * defer to protected function to allow subclasses to override easily.\n         * see https://github.com/microsoft/TypeScript/issues/338\n         */\n        return this.__minimumHeight();\n    }\n    get maximumHeight() {\n        /**\n         * defer to protected function to allow subclasses to override easily.\n         * see https://github.com/microsoft/TypeScript/issues/338\n         */\n        return this.__maximumHeight();\n    }\n    get maximumWidth() {\n        /**\n         * defer to protected function to allow subclasses to override easily.\n         * see https://github.com/microsoft/TypeScript/issues/338\n         */\n        return this.__maximumWidth();\n    }\n    __minimumWidth() {\n        const width = typeof this._minimumWidth === 'function'\n            ? this._minimumWidth()\n            : this._minimumWidth;\n        if (width !== this._evaluatedMinimumWidth) {\n            this._evaluatedMinimumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    __maximumWidth() {\n        const width = typeof this._maximumWidth === 'function'\n            ? this._maximumWidth()\n            : this._maximumWidth;\n        if (width !== this._evaluatedMaximumWidth) {\n            this._evaluatedMaximumWidth = width;\n            this.updateConstraints();\n        }\n        return width;\n    }\n    __minimumHeight() {\n        const height = typeof this._minimumHeight === 'function'\n            ? this._minimumHeight()\n            : this._minimumHeight;\n        if (height !== this._evaluatedMinimumHeight) {\n            this._evaluatedMinimumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    __maximumHeight() {\n        const height = typeof this._maximumHeight === 'function'\n            ? this._maximumHeight()\n            : this._maximumHeight;\n        if (height !== this._evaluatedMaximumHeight) {\n            this._evaluatedMaximumHeight = height;\n            this.updateConstraints();\n        }\n        return height;\n    }\n    get isActive() {\n        return this.api.isActive;\n    }\n    get isVisible() {\n        return this.api.isVisible;\n    }\n    constructor(id, component, options, api) {\n        super(id, component, api !== null && api !== void 0 ? api : new GridviewPanelApiImpl(id, component));\n        this._evaluatedMinimumWidth = 0;\n        this._evaluatedMaximumWidth = Number.MAX_SAFE_INTEGER;\n        this._evaluatedMinimumHeight = 0;\n        this._evaluatedMaximumHeight = Number.MAX_SAFE_INTEGER;\n        this._minimumWidth = 0;\n        this._minimumHeight = 0;\n        this._maximumWidth = Number.MAX_SAFE_INTEGER;\n        this._maximumHeight = Number.MAX_SAFE_INTEGER;\n        this._snap = false;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumWidth) === 'number') {\n            this._minimumWidth = options.minimumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumWidth) === 'number') {\n            this._maximumWidth = options.maximumWidth;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.minimumHeight) === 'number') {\n            this._minimumHeight = options.minimumHeight;\n        }\n        if (typeof (options === null || options === void 0 ? void 0 : options.maximumHeight) === 'number') {\n            this._maximumHeight = options.maximumHeight;\n        }\n        this.api.initialize(this); // TODO: required to by-pass 'super before this' requirement\n        this.addDisposables(this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onActiveChange(() => {\n            const { accessor } = this._params;\n            accessor.doSetGroupActive(this);\n        }), this.api.onDidConstraintsChangeInternal((event) => {\n            if (typeof event.minimumWidth === 'number' ||\n                typeof event.minimumWidth === 'function') {\n                this._minimumWidth = event.minimumWidth;\n            }\n            if (typeof event.minimumHeight === 'number' ||\n                typeof event.minimumHeight === 'function') {\n                this._minimumHeight = event.minimumHeight;\n            }\n            if (typeof event.maximumWidth === 'number' ||\n                typeof event.maximumWidth === 'function') {\n                this._maximumWidth = event.maximumWidth;\n            }\n            if (typeof event.maximumHeight === 'number' ||\n                typeof event.maximumHeight === 'function') {\n                this._maximumHeight = event.maximumHeight;\n            }\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({\n                height: event.height,\n                width: event.width,\n            });\n        }), this._onDidChange);\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    init(parameters) {\n        if (parameters.maximumHeight) {\n            this._maximumHeight = parameters.maximumHeight;\n        }\n        if (parameters.minimumHeight) {\n            this._minimumHeight = parameters.minimumHeight;\n        }\n        if (parameters.maximumWidth) {\n            this._maximumWidth = parameters.maximumWidth;\n        }\n        if (parameters.minimumWidth) {\n            this._minimumWidth = parameters.minimumWidth;\n        }\n        this._priority = parameters.priority;\n        this._snap = !!parameters.snap;\n        super.init(parameters);\n        if (typeof parameters.isVisible === 'boolean') {\n            this.setVisible(parameters.isVisible);\n        }\n    }\n    updateConstraints() {\n        this.api._onDidConstraintsChange.fire({\n            minimumWidth: this._evaluatedMinimumWidth,\n            maximumWidth: this._evaluatedMaximumWidth,\n            minimumHeight: this._evaluatedMinimumHeight,\n            maximumHeight: this._evaluatedMaximumHeight,\n        });\n    }\n    toJSON() {\n        const state = super.toJSON();\n        const maximum = (value) => value === Number.MAX_SAFE_INTEGER ? undefined : value;\n        const minimum = (value) => (value <= 0 ? undefined : value);\n        return Object.assign(Object.assign({}, state), { minimumHeight: minimum(this.minimumHeight), maximumHeight: maximum(this.maximumHeight), minimumWidth: minimum(this.minimumWidth), maximumWidth: maximum(this.maximumWidth), snap: this.snap, priority: this.priority });\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}