{"ast":null,"code":"import { toggleClass, watchElementResize } from './dom';\nimport { addDisposableListener } from './events';\nimport { CompositeDisposable } from './lifecycle';\nimport { clamp } from './math';\nexport class Scrollbar extends CompositeDisposable {\n  get element() {\n    return this._element;\n  }\n  constructor(scrollableElement) {\n    super();\n    this.scrollableElement = scrollableElement;\n    this._scrollLeft = 0;\n    this._element = document.createElement('div');\n    this._element.className = 'dv-scrollable';\n    this._horizontalScrollbar = document.createElement('div');\n    this._horizontalScrollbar.className = 'dv-scrollbar-horizontal';\n    this.element.appendChild(scrollableElement);\n    this.element.appendChild(this._horizontalScrollbar);\n    this.addDisposables(addDisposableListener(this.element, 'wheel', event => {\n      this._scrollLeft += event.deltaY * Scrollbar.MouseWheelSpeed;\n      this.calculateScrollbarStyles();\n    }), addDisposableListener(this._horizontalScrollbar, 'pointerdown', event => {\n      event.preventDefault();\n      toggleClass(this.element, 'dv-scrollable-scrolling', true);\n      const originalClientX = event.clientX;\n      const originalScrollLeft = this._scrollLeft;\n      const onPointerMove = event => {\n        const deltaX = event.clientX - originalClientX;\n        const {\n          clientWidth\n        } = this.element;\n        const {\n          scrollWidth\n        } = this.scrollableElement;\n        const p = clientWidth / scrollWidth;\n        this._scrollLeft = originalScrollLeft + deltaX / p;\n        this.calculateScrollbarStyles();\n      };\n      const onEnd = () => {\n        toggleClass(this.element, 'dv-scrollable-scrolling', false);\n        document.removeEventListener('pointermove', onPointerMove);\n        document.removeEventListener('pointerup', onEnd);\n        document.removeEventListener('pointercancel', onEnd);\n      };\n      document.addEventListener('pointermove', onPointerMove);\n      document.addEventListener('pointerup', onEnd);\n      document.addEventListener('pointercancel', onEnd);\n    }), addDisposableListener(this.element, 'scroll', () => {\n      this.calculateScrollbarStyles();\n    }), addDisposableListener(this.scrollableElement, 'scroll', () => {\n      this._scrollLeft = this.scrollableElement.scrollLeft;\n      this.calculateScrollbarStyles();\n    }), watchElementResize(this.element, () => {\n      toggleClass(this.element, 'dv-scrollable-resizing', true);\n      if (this._animationTimer) {\n        clearTimeout(this._animationTimer);\n      }\n      this._animationTimer = setTimeout(() => {\n        clearTimeout(this._animationTimer);\n        toggleClass(this.element, 'dv-scrollable-resizing', false);\n      }, 500);\n      this.calculateScrollbarStyles();\n    }));\n  }\n  calculateScrollbarStyles() {\n    const {\n      clientWidth\n    } = this.element;\n    const {\n      scrollWidth\n    } = this.scrollableElement;\n    const hasScrollbar = scrollWidth > clientWidth;\n    if (hasScrollbar) {\n      const px = clientWidth * (clientWidth / scrollWidth);\n      this._horizontalScrollbar.style.width = `${px}px`;\n      this._scrollLeft = clamp(this._scrollLeft, 0, this.scrollableElement.scrollWidth - clientWidth);\n      this.scrollableElement.scrollLeft = this._scrollLeft;\n      const percentageComplete = this._scrollLeft / (scrollWidth - clientWidth);\n      this._horizontalScrollbar.style.left = `${(clientWidth - px) * percentageComplete}px`;\n    } else {\n      this._horizontalScrollbar.style.width = `0px`;\n      this._horizontalScrollbar.style.left = `0px`;\n      this._scrollLeft = 0;\n    }\n  }\n}\nScrollbar.MouseWheelSpeed = 1;","map":{"version":3,"names":["toggleClass","watchElementResize","addDisposableListener","CompositeDisposable","clamp","Scrollbar","element","_element","constructor","scrollableElement","_scrollLeft","document","createElement","className","_horizontalScrollbar","appendChild","addDisposables","event","deltaY","MouseWheelSpeed","calculateScrollbarStyles","preventDefault","originalClientX","clientX","originalScrollLeft","onPointerMove","deltaX","clientWidth","scrollWidth","p","onEnd","removeEventListener","addEventListener","scrollLeft","_animationTimer","clearTimeout","setTimeout","hasScrollbar","px","style","width","percentageComplete","left"],"sources":["E:/dockview.demo/node_modules/dockview-core/dist/esm/scrollbar.js"],"sourcesContent":["import { toggleClass, watchElementResize } from './dom';\nimport { addDisposableListener } from './events';\nimport { CompositeDisposable } from './lifecycle';\nimport { clamp } from './math';\nexport class Scrollbar extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(scrollableElement) {\n        super();\n        this.scrollableElement = scrollableElement;\n        this._scrollLeft = 0;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-scrollable';\n        this._horizontalScrollbar = document.createElement('div');\n        this._horizontalScrollbar.className = 'dv-scrollbar-horizontal';\n        this.element.appendChild(scrollableElement);\n        this.element.appendChild(this._horizontalScrollbar);\n        this.addDisposables(addDisposableListener(this.element, 'wheel', (event) => {\n            this._scrollLeft += event.deltaY * Scrollbar.MouseWheelSpeed;\n            this.calculateScrollbarStyles();\n        }), addDisposableListener(this._horizontalScrollbar, 'pointerdown', (event) => {\n            event.preventDefault();\n            toggleClass(this.element, 'dv-scrollable-scrolling', true);\n            const originalClientX = event.clientX;\n            const originalScrollLeft = this._scrollLeft;\n            const onPointerMove = (event) => {\n                const deltaX = event.clientX - originalClientX;\n                const { clientWidth } = this.element;\n                const { scrollWidth } = this.scrollableElement;\n                const p = clientWidth / scrollWidth;\n                this._scrollLeft = originalScrollLeft + deltaX / p;\n                this.calculateScrollbarStyles();\n            };\n            const onEnd = () => {\n                toggleClass(this.element, 'dv-scrollable-scrolling', false);\n                document.removeEventListener('pointermove', onPointerMove);\n                document.removeEventListener('pointerup', onEnd);\n                document.removeEventListener('pointercancel', onEnd);\n            };\n            document.addEventListener('pointermove', onPointerMove);\n            document.addEventListener('pointerup', onEnd);\n            document.addEventListener('pointercancel', onEnd);\n        }), addDisposableListener(this.element, 'scroll', () => {\n            this.calculateScrollbarStyles();\n        }), addDisposableListener(this.scrollableElement, 'scroll', () => {\n            this._scrollLeft = this.scrollableElement.scrollLeft;\n            this.calculateScrollbarStyles();\n        }), watchElementResize(this.element, () => {\n            toggleClass(this.element, 'dv-scrollable-resizing', true);\n            if (this._animationTimer) {\n                clearTimeout(this._animationTimer);\n            }\n            this._animationTimer = setTimeout(() => {\n                clearTimeout(this._animationTimer);\n                toggleClass(this.element, 'dv-scrollable-resizing', false);\n            }, 500);\n            this.calculateScrollbarStyles();\n        }));\n    }\n    calculateScrollbarStyles() {\n        const { clientWidth } = this.element;\n        const { scrollWidth } = this.scrollableElement;\n        const hasScrollbar = scrollWidth > clientWidth;\n        if (hasScrollbar) {\n            const px = clientWidth * (clientWidth / scrollWidth);\n            this._horizontalScrollbar.style.width = `${px}px`;\n            this._scrollLeft = clamp(this._scrollLeft, 0, this.scrollableElement.scrollWidth - clientWidth);\n            this.scrollableElement.scrollLeft = this._scrollLeft;\n            const percentageComplete = this._scrollLeft / (scrollWidth - clientWidth);\n            this._horizontalScrollbar.style.left = `${(clientWidth - px) * percentageComplete}px`;\n        }\n        else {\n            this._horizontalScrollbar.style.width = `0px`;\n            this._horizontalScrollbar.style.left = `0px`;\n            this._scrollLeft = 0;\n        }\n    }\n}\nScrollbar.MouseWheelSpeed = 1;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}