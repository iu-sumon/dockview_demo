{"ast":null,"code":"import { PaneviewPanelApiImpl } from '../api/paneviewPanelApi';\nimport { addClasses, removeClasses } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { BasePanelView } from '../gridview/basePanelView';\nimport { Orientation } from '../splitview/splitview';\nexport class PaneviewPanel extends BasePanelView {\n  set orientation(value) {\n    this._orientation = value;\n  }\n  get orientation() {\n    return this._orientation;\n  }\n  get minimumSize() {\n    const headerSize = this.headerSize;\n    const expanded = this.isExpanded();\n    const minimumBodySize = expanded ? this._minimumBodySize : 0;\n    return headerSize + minimumBodySize;\n  }\n  get maximumSize() {\n    const headerSize = this.headerSize;\n    const expanded = this.isExpanded();\n    const maximumBodySize = expanded ? this._maximumBodySize : 0;\n    return headerSize + maximumBodySize;\n  }\n  get size() {\n    return this._size;\n  }\n  get orthogonalSize() {\n    return this._orthogonalSize;\n  }\n  set orthogonalSize(size) {\n    this._orthogonalSize = size;\n  }\n  get minimumBodySize() {\n    return this._minimumBodySize;\n  }\n  set minimumBodySize(value) {\n    this._minimumBodySize = typeof value === 'number' ? value : 0;\n  }\n  get maximumBodySize() {\n    return this._maximumBodySize;\n  }\n  set maximumBodySize(value) {\n    this._maximumBodySize = typeof value === 'number' ? value : Number.POSITIVE_INFINITY;\n  }\n  get headerVisible() {\n    return this._headerVisible;\n  }\n  set headerVisible(value) {\n    this._headerVisible = value;\n    this.header.style.display = value ? '' : 'none';\n  }\n  constructor(options) {\n    super(options.id, options.component, new PaneviewPanelApiImpl(options.id, options.component));\n    this._onDidChangeExpansionState = new Emitter({\n      replay: true\n    });\n    this.onDidChangeExpansionState = this._onDidChangeExpansionState.event;\n    this._onDidChange = new Emitter();\n    this.onDidChange = this._onDidChange.event;\n    this._orthogonalSize = 0;\n    this._size = 0;\n    this._isExpanded = false;\n    this.api.pane = this; // TODO cannot use 'this' before 'super'\n    this.api.initialize(this);\n    this.headerSize = options.headerSize;\n    this.headerComponent = options.headerComponent;\n    this._minimumBodySize = options.minimumBodySize;\n    this._maximumBodySize = options.maximumBodySize;\n    this._isExpanded = options.isExpanded;\n    this._headerVisible = options.isHeaderVisible;\n    this._onDidChangeExpansionState.fire(this.isExpanded()); // initialize value\n    this._orientation = options.orientation;\n    this.element.classList.add('dv-pane');\n    this.addDisposables(this.api.onWillVisibilityChange(event => {\n      const {\n        isVisible\n      } = event;\n      const {\n        accessor\n      } = this._params;\n      accessor.setVisible(this, isVisible);\n    }), this.api.onDidSizeChange(event => {\n      this._onDidChange.fire({\n        size: event.size\n      });\n    }), addDisposableListener(this.element, 'mouseenter', ev => {\n      this.api._onMouseEnter.fire(ev);\n    }), addDisposableListener(this.element, 'mouseleave', ev => {\n      this.api._onMouseLeave.fire(ev);\n    }));\n    this.addDisposables(this._onDidChangeExpansionState, this.onDidChangeExpansionState(isPanelExpanded => {\n      this.api._onDidExpansionChange.fire({\n        isExpanded: isPanelExpanded\n      });\n    }), this.api.onDidFocusChange(e => {\n      if (!this.header) {\n        return;\n      }\n      if (e.isFocused) {\n        addClasses(this.header, 'focused');\n      } else {\n        removeClasses(this.header, 'focused');\n      }\n    }));\n    this.renderOnce();\n  }\n  setVisible(isVisible) {\n    this.api._onDidVisibilityChange.fire({\n      isVisible\n    });\n  }\n  setActive(isActive) {\n    this.api._onDidActiveChange.fire({\n      isActive\n    });\n  }\n  isExpanded() {\n    return this._isExpanded;\n  }\n  setExpanded(expanded) {\n    if (this._isExpanded === expanded) {\n      return;\n    }\n    this._isExpanded = expanded;\n    if (expanded) {\n      if (this.animationTimer) {\n        clearTimeout(this.animationTimer);\n      }\n      if (this.body) {\n        this.element.appendChild(this.body);\n      }\n    } else {\n      this.animationTimer = setTimeout(() => {\n        var _a;\n        (_a = this.body) === null || _a === void 0 ? void 0 : _a.remove();\n      }, 200);\n    }\n    this._onDidChange.fire(expanded ? {\n      size: this.width\n    } : {});\n    this._onDidChangeExpansionState.fire(expanded);\n  }\n  layout(size, orthogonalSize) {\n    this._size = size;\n    this._orthogonalSize = orthogonalSize;\n    const [width, height] = this.orientation === Orientation.HORIZONTAL ? [size, orthogonalSize] : [orthogonalSize, size];\n    super.layout(width, height);\n  }\n  init(parameters) {\n    var _a, _b;\n    super.init(parameters);\n    if (typeof parameters.minimumBodySize === 'number') {\n      this.minimumBodySize = parameters.minimumBodySize;\n    }\n    if (typeof parameters.maximumBodySize === 'number') {\n      this.maximumBodySize = parameters.maximumBodySize;\n    }\n    this.bodyPart = this.getBodyComponent();\n    this.headerPart = this.getHeaderComponent();\n    this.bodyPart.init(Object.assign(Object.assign({}, parameters), {\n      api: this.api\n    }));\n    this.headerPart.init(Object.assign(Object.assign({}, parameters), {\n      api: this.api\n    }));\n    (_a = this.body) === null || _a === void 0 ? void 0 : _a.append(this.bodyPart.element);\n    (_b = this.header) === null || _b === void 0 ? void 0 : _b.append(this.headerPart.element);\n    if (typeof parameters.isExpanded === 'boolean') {\n      this.setExpanded(parameters.isExpanded);\n    }\n  }\n  toJSON() {\n    const params = this._params;\n    return Object.assign(Object.assign({}, super.toJSON()), {\n      headerComponent: this.headerComponent,\n      title: params.title\n    });\n  }\n  renderOnce() {\n    this.header = document.createElement('div');\n    this.header.tabIndex = 0;\n    this.header.className = 'dv-pane-header';\n    this.header.style.height = `${this.headerSize}px`;\n    this.header.style.lineHeight = `${this.headerSize}px`;\n    this.header.style.minHeight = `${this.headerSize}px`;\n    this.header.style.maxHeight = `${this.headerSize}px`;\n    this.element.appendChild(this.header);\n    this.body = document.createElement('div');\n    this.body.className = 'dv-pane-body';\n    this.element.appendChild(this.body);\n  }\n  // TODO slightly hacky by-pass of the component to create a body and header component\n  getComponent() {\n    return {\n      update: params => {\n        var _a, _b;\n        (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.update({\n          params\n        });\n        (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.update({\n          params\n        });\n      },\n      dispose: () => {\n        var _a, _b;\n        (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.dispose();\n        (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.dispose();\n      }\n    };\n  }\n}","map":{"version":3,"names":["PaneviewPanelApiImpl","addClasses","removeClasses","addDisposableListener","Emitter","BasePanelView","Orientation","PaneviewPanel","orientation","value","_orientation","minimumSize","headerSize","expanded","isExpanded","minimumBodySize","_minimumBodySize","maximumSize","maximumBodySize","_maximumBodySize","size","_size","orthogonalSize","_orthogonalSize","Number","POSITIVE_INFINITY","headerVisible","_headerVisible","header","style","display","constructor","options","id","component","_onDidChangeExpansionState","replay","onDidChangeExpansionState","event","_onDidChange","onDidChange","_isExpanded","api","pane","initialize","headerComponent","isHeaderVisible","fire","element","classList","add","addDisposables","onWillVisibilityChange","isVisible","accessor","_params","setVisible","onDidSizeChange","ev","_onMouseEnter","_onMouseLeave","isPanelExpanded","_onDidExpansionChange","onDidFocusChange","e","isFocused","renderOnce","_onDidVisibilityChange","setActive","isActive","_onDidActiveChange","setExpanded","animationTimer","clearTimeout","body","appendChild","setTimeout","_a","remove","width","layout","height","HORIZONTAL","init","parameters","_b","bodyPart","getBodyComponent","headerPart","getHeaderComponent","Object","assign","append","toJSON","params","title","document","createElement","tabIndex","className","lineHeight","minHeight","maxHeight","getComponent","update","dispose"],"sources":["E:/dockview.demo/node_modules/dockview-core/dist/esm/paneview/paneviewPanel.js"],"sourcesContent":["import { PaneviewPanelApiImpl } from '../api/paneviewPanelApi';\nimport { addClasses, removeClasses } from '../dom';\nimport { addDisposableListener, Emitter } from '../events';\nimport { BasePanelView, } from '../gridview/basePanelView';\nimport { Orientation } from '../splitview/splitview';\nexport class PaneviewPanel extends BasePanelView {\n    set orientation(value) {\n        this._orientation = value;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get minimumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const minimumBodySize = expanded ? this._minimumBodySize : 0;\n        return headerSize + minimumBodySize;\n    }\n    get maximumSize() {\n        const headerSize = this.headerSize;\n        const expanded = this.isExpanded();\n        const maximumBodySize = expanded ? this._maximumBodySize : 0;\n        return headerSize + maximumBodySize;\n    }\n    get size() {\n        return this._size;\n    }\n    get orthogonalSize() {\n        return this._orthogonalSize;\n    }\n    set orthogonalSize(size) {\n        this._orthogonalSize = size;\n    }\n    get minimumBodySize() {\n        return this._minimumBodySize;\n    }\n    set minimumBodySize(value) {\n        this._minimumBodySize = typeof value === 'number' ? value : 0;\n    }\n    get maximumBodySize() {\n        return this._maximumBodySize;\n    }\n    set maximumBodySize(value) {\n        this._maximumBodySize =\n            typeof value === 'number' ? value : Number.POSITIVE_INFINITY;\n    }\n    get headerVisible() {\n        return this._headerVisible;\n    }\n    set headerVisible(value) {\n        this._headerVisible = value;\n        this.header.style.display = value ? '' : 'none';\n    }\n    constructor(options) {\n        super(options.id, options.component, new PaneviewPanelApiImpl(options.id, options.component));\n        this._onDidChangeExpansionState = new Emitter({ replay: true });\n        this.onDidChangeExpansionState = this._onDidChangeExpansionState.event;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._orthogonalSize = 0;\n        this._size = 0;\n        this._isExpanded = false;\n        this.api.pane = this; // TODO cannot use 'this' before 'super'\n        this.api.initialize(this);\n        this.headerSize = options.headerSize;\n        this.headerComponent = options.headerComponent;\n        this._minimumBodySize = options.minimumBodySize;\n        this._maximumBodySize = options.maximumBodySize;\n        this._isExpanded = options.isExpanded;\n        this._headerVisible = options.isHeaderVisible;\n        this._onDidChangeExpansionState.fire(this.isExpanded()); // initialize value\n        this._orientation = options.orientation;\n        this.element.classList.add('dv-pane');\n        this.addDisposables(this.api.onWillVisibilityChange((event) => {\n            const { isVisible } = event;\n            const { accessor } = this._params;\n            accessor.setVisible(this, isVisible);\n        }), this.api.onDidSizeChange((event) => {\n            this._onDidChange.fire({ size: event.size });\n        }), addDisposableListener(this.element, 'mouseenter', (ev) => {\n            this.api._onMouseEnter.fire(ev);\n        }), addDisposableListener(this.element, 'mouseleave', (ev) => {\n            this.api._onMouseLeave.fire(ev);\n        }));\n        this.addDisposables(this._onDidChangeExpansionState, this.onDidChangeExpansionState((isPanelExpanded) => {\n            this.api._onDidExpansionChange.fire({\n                isExpanded: isPanelExpanded,\n            });\n        }), this.api.onDidFocusChange((e) => {\n            if (!this.header) {\n                return;\n            }\n            if (e.isFocused) {\n                addClasses(this.header, 'focused');\n            }\n            else {\n                removeClasses(this.header, 'focused');\n            }\n        }));\n        this.renderOnce();\n    }\n    setVisible(isVisible) {\n        this.api._onDidVisibilityChange.fire({ isVisible });\n    }\n    setActive(isActive) {\n        this.api._onDidActiveChange.fire({ isActive });\n    }\n    isExpanded() {\n        return this._isExpanded;\n    }\n    setExpanded(expanded) {\n        if (this._isExpanded === expanded) {\n            return;\n        }\n        this._isExpanded = expanded;\n        if (expanded) {\n            if (this.animationTimer) {\n                clearTimeout(this.animationTimer);\n            }\n            if (this.body) {\n                this.element.appendChild(this.body);\n            }\n        }\n        else {\n            this.animationTimer = setTimeout(() => {\n                var _a;\n                (_a = this.body) === null || _a === void 0 ? void 0 : _a.remove();\n            }, 200);\n        }\n        this._onDidChange.fire(expanded ? { size: this.width } : {});\n        this._onDidChangeExpansionState.fire(expanded);\n    }\n    layout(size, orthogonalSize) {\n        this._size = size;\n        this._orthogonalSize = orthogonalSize;\n        const [width, height] = this.orientation === Orientation.HORIZONTAL\n            ? [size, orthogonalSize]\n            : [orthogonalSize, size];\n        super.layout(width, height);\n    }\n    init(parameters) {\n        var _a, _b;\n        super.init(parameters);\n        if (typeof parameters.minimumBodySize === 'number') {\n            this.minimumBodySize = parameters.minimumBodySize;\n        }\n        if (typeof parameters.maximumBodySize === 'number') {\n            this.maximumBodySize = parameters.maximumBodySize;\n        }\n        this.bodyPart = this.getBodyComponent();\n        this.headerPart = this.getHeaderComponent();\n        this.bodyPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        this.headerPart.init(Object.assign(Object.assign({}, parameters), { api: this.api }));\n        (_a = this.body) === null || _a === void 0 ? void 0 : _a.append(this.bodyPart.element);\n        (_b = this.header) === null || _b === void 0 ? void 0 : _b.append(this.headerPart.element);\n        if (typeof parameters.isExpanded === 'boolean') {\n            this.setExpanded(parameters.isExpanded);\n        }\n    }\n    toJSON() {\n        const params = this._params;\n        return Object.assign(Object.assign({}, super.toJSON()), { headerComponent: this.headerComponent, title: params.title });\n    }\n    renderOnce() {\n        this.header = document.createElement('div');\n        this.header.tabIndex = 0;\n        this.header.className = 'dv-pane-header';\n        this.header.style.height = `${this.headerSize}px`;\n        this.header.style.lineHeight = `${this.headerSize}px`;\n        this.header.style.minHeight = `${this.headerSize}px`;\n        this.header.style.maxHeight = `${this.headerSize}px`;\n        this.element.appendChild(this.header);\n        this.body = document.createElement('div');\n        this.body.className = 'dv-pane-body';\n        this.element.appendChild(this.body);\n    }\n    // TODO slightly hacky by-pass of the component to create a body and header component\n    getComponent() {\n        return {\n            update: (params) => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.update({ params });\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.update({ params });\n            },\n            dispose: () => {\n                var _a, _b;\n                (_a = this.bodyPart) === null || _a === void 0 ? void 0 : _a.dispose();\n                (_b = this.headerPart) === null || _b === void 0 ? void 0 : _b.dispose();\n            },\n        };\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}