{"ast":null,"code":"import { getPanelData } from '../../../dnd/dataTransfer';\nimport { isChildEntirelyVisibleWithinParent, OverflowObserver } from '../../../dom';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable, Disposable, MutableDisposable } from '../../../lifecycle';\nimport { Scrollbar } from '../../../scrollbar';\nimport { WillShowOverlayLocationEvent } from '../../events';\nimport { Tab } from '../tab/tab';\nexport class Tabs extends CompositeDisposable {\n  get showTabsOverflowControl() {\n    return this._showTabsOverflowControl;\n  }\n  set showTabsOverflowControl(value) {\n    if (this._showTabsOverflowControl == value) {\n      return;\n    }\n    this._showTabsOverflowControl = value;\n    if (value) {\n      const observer = new OverflowObserver(this._tabsList);\n      this._observerDisposable.value = new CompositeDisposable(observer, observer.onDidChange(event => {\n        const hasOverflow = event.hasScrollX || event.hasScrollY;\n        this.toggleDropdown({\n          reset: !hasOverflow\n        });\n      }), addDisposableListener(this._tabsList, 'scroll', () => {\n        this.toggleDropdown({\n          reset: false\n        });\n      }));\n    }\n  }\n  get element() {\n    return this._element;\n  }\n  get panels() {\n    return this._tabs.map(_ => _.value.panel.id);\n  }\n  get size() {\n    return this._tabs.length;\n  }\n  get tabs() {\n    return this._tabs.map(_ => _.value);\n  }\n  constructor(group, accessor, options) {\n    super();\n    this.group = group;\n    this.accessor = accessor;\n    this._observerDisposable = new MutableDisposable();\n    this._tabs = [];\n    this.selectedIndex = -1;\n    this._showTabsOverflowControl = false;\n    this._onTabDragStart = new Emitter();\n    this.onTabDragStart = this._onTabDragStart.event;\n    this._onDrop = new Emitter();\n    this.onDrop = this._onDrop.event;\n    this._onWillShowOverlay = new Emitter();\n    this.onWillShowOverlay = this._onWillShowOverlay.event;\n    this._onOverflowTabsChange = new Emitter();\n    this.onOverflowTabsChange = this._onOverflowTabsChange.event;\n    this._tabsList = document.createElement('div');\n    this._tabsList.className = 'dv-tabs-container dv-horizontal';\n    this.showTabsOverflowControl = options.showTabsOverflowControl;\n    if (accessor.options.scrollbars === 'native') {\n      this._element = this._tabsList;\n    } else {\n      const scrollbar = new Scrollbar(this._tabsList);\n      this._element = scrollbar.element;\n      this.addDisposables(scrollbar);\n    }\n    this.addDisposables(this._onOverflowTabsChange, this._observerDisposable, this._onWillShowOverlay, this._onDrop, this._onTabDragStart, addDisposableListener(this.element, 'pointerdown', event => {\n      if (event.defaultPrevented) {\n        return;\n      }\n      const isLeftClick = event.button === 0;\n      if (isLeftClick) {\n        this.accessor.doSetGroupActive(this.group);\n      }\n    }), Disposable.from(() => {\n      for (const {\n        value,\n        disposable\n      } of this._tabs) {\n        disposable.dispose();\n        value.dispose();\n      }\n      this._tabs = [];\n    }));\n  }\n  indexOf(id) {\n    return this._tabs.findIndex(tab => tab.value.panel.id === id);\n  }\n  isActive(tab) {\n    return this.selectedIndex > -1 && this._tabs[this.selectedIndex].value === tab;\n  }\n  setActivePanel(panel) {\n    let runningWidth = 0;\n    for (const tab of this._tabs) {\n      const isActivePanel = panel.id === tab.value.panel.id;\n      tab.value.setActive(isActivePanel);\n      if (isActivePanel) {\n        const element = tab.value.element;\n        const parentElement = element.parentElement;\n        if (runningWidth < parentElement.scrollLeft || runningWidth + element.clientWidth > parentElement.scrollLeft + parentElement.clientWidth) {\n          parentElement.scrollLeft = runningWidth;\n        }\n      }\n      runningWidth += tab.value.element.clientWidth;\n    }\n  }\n  openPanel(panel, index = this._tabs.length) {\n    if (this._tabs.find(tab => tab.value.panel.id === panel.id)) {\n      return;\n    }\n    const tab = new Tab(panel, this.accessor, this.group);\n    tab.setContent(panel.view.tab);\n    const disposable = new CompositeDisposable(tab.onDragStart(event => {\n      this._onTabDragStart.fire({\n        nativeEvent: event,\n        panel\n      });\n    }), tab.onPointerDown(event => {\n      if (event.defaultPrevented) {\n        return;\n      }\n      const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n      const isFloatingWithOnePanel = this.group.api.location.type === 'floating' && this.size === 1;\n      if (isFloatingGroupsEnabled && !isFloatingWithOnePanel && event.shiftKey) {\n        event.preventDefault();\n        const panel = this.accessor.getGroupPanel(tab.panel.id);\n        const {\n          top,\n          left\n        } = tab.element.getBoundingClientRect();\n        const {\n          top: rootTop,\n          left: rootLeft\n        } = this.accessor.element.getBoundingClientRect();\n        this.accessor.addFloatingGroup(panel, {\n          x: left - rootLeft,\n          y: top - rootTop,\n          inDragMode: true\n        });\n        return;\n      }\n      switch (event.button) {\n        case 0:\n          // left click or touch\n          if (this.group.activePanel !== panel) {\n            this.group.model.openPanel(panel);\n          }\n          break;\n      }\n    }), tab.onDrop(event => {\n      this._onDrop.fire({\n        event: event.nativeEvent,\n        index: this._tabs.findIndex(x => x.value === tab)\n      });\n    }), tab.onWillShowOverlay(event => {\n      this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n        kind: 'tab',\n        panel: this.group.activePanel,\n        api: this.accessor.api,\n        group: this.group,\n        getData: getPanelData\n      }));\n    }));\n    const value = {\n      value: tab,\n      disposable\n    };\n    this.addTab(value, index);\n  }\n  delete(id) {\n    const index = this.indexOf(id);\n    const tabToRemove = this._tabs.splice(index, 1)[0];\n    const {\n      value,\n      disposable\n    } = tabToRemove;\n    disposable.dispose();\n    value.dispose();\n    value.element.remove();\n  }\n  addTab(tab, index = this._tabs.length) {\n    if (index < 0 || index > this._tabs.length) {\n      throw new Error('invalid location');\n    }\n    this._tabsList.insertBefore(tab.value.element, this._tabsList.children[index]);\n    this._tabs = [...this._tabs.slice(0, index), tab, ...this._tabs.slice(index)];\n    if (this.selectedIndex < 0) {\n      this.selectedIndex = index;\n    }\n  }\n  toggleDropdown(options) {\n    const tabs = options.reset ? [] : this._tabs.filter(tab => !isChildEntirelyVisibleWithinParent(tab.value.element, this._tabsList)).map(x => x.value.panel.id);\n    this._onOverflowTabsChange.fire({\n      tabs,\n      reset: options.reset\n    });\n  }\n  updateDragAndDropState() {\n    for (const tab of this._tabs) {\n      tab.value.updateDragAndDropState();\n    }\n  }\n}","map":{"version":3,"names":["getPanelData","isChildEntirelyVisibleWithinParent","OverflowObserver","addDisposableListener","Emitter","CompositeDisposable","Disposable","MutableDisposable","Scrollbar","WillShowOverlayLocationEvent","Tab","Tabs","showTabsOverflowControl","_showTabsOverflowControl","value","observer","_tabsList","_observerDisposable","onDidChange","event","hasOverflow","hasScrollX","hasScrollY","toggleDropdown","reset","element","_element","panels","_tabs","map","_","panel","id","size","length","tabs","constructor","group","accessor","options","selectedIndex","_onTabDragStart","onTabDragStart","_onDrop","onDrop","_onWillShowOverlay","onWillShowOverlay","_onOverflowTabsChange","onOverflowTabsChange","document","createElement","className","scrollbars","scrollbar","addDisposables","defaultPrevented","isLeftClick","button","doSetGroupActive","from","disposable","dispose","indexOf","findIndex","tab","isActive","setActivePanel","runningWidth","isActivePanel","setActive","parentElement","scrollLeft","clientWidth","openPanel","index","find","setContent","view","onDragStart","fire","nativeEvent","onPointerDown","isFloatingGroupsEnabled","disableFloatingGroups","isFloatingWithOnePanel","api","location","type","shiftKey","preventDefault","getGroupPanel","top","left","getBoundingClientRect","rootTop","rootLeft","addFloatingGroup","x","y","inDragMode","activePanel","model","kind","getData","addTab","delete","tabToRemove","splice","remove","Error","insertBefore","children","slice","filter","updateDragAndDropState"],"sources":["E:/dockview.demo/node_modules/dockview-core/dist/esm/dockview/components/titlebar/tabs.js"],"sourcesContent":["import { getPanelData } from '../../../dnd/dataTransfer';\nimport { isChildEntirelyVisibleWithinParent, OverflowObserver, } from '../../../dom';\nimport { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable, Disposable, MutableDisposable, } from '../../../lifecycle';\nimport { Scrollbar } from '../../../scrollbar';\nimport { WillShowOverlayLocationEvent } from '../../events';\nimport { Tab } from '../tab/tab';\nexport class Tabs extends CompositeDisposable {\n    get showTabsOverflowControl() {\n        return this._showTabsOverflowControl;\n    }\n    set showTabsOverflowControl(value) {\n        if (this._showTabsOverflowControl == value) {\n            return;\n        }\n        this._showTabsOverflowControl = value;\n        if (value) {\n            const observer = new OverflowObserver(this._tabsList);\n            this._observerDisposable.value = new CompositeDisposable(observer, observer.onDidChange((event) => {\n                const hasOverflow = event.hasScrollX || event.hasScrollY;\n                this.toggleDropdown({ reset: !hasOverflow });\n            }), addDisposableListener(this._tabsList, 'scroll', () => {\n                this.toggleDropdown({ reset: false });\n            }));\n        }\n    }\n    get element() {\n        return this._element;\n    }\n    get panels() {\n        return this._tabs.map((_) => _.value.panel.id);\n    }\n    get size() {\n        return this._tabs.length;\n    }\n    get tabs() {\n        return this._tabs.map((_) => _.value);\n    }\n    constructor(group, accessor, options) {\n        super();\n        this.group = group;\n        this.accessor = accessor;\n        this._observerDisposable = new MutableDisposable();\n        this._tabs = [];\n        this.selectedIndex = -1;\n        this._showTabsOverflowControl = false;\n        this._onTabDragStart = new Emitter();\n        this.onTabDragStart = this._onTabDragStart.event;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._onOverflowTabsChange = new Emitter();\n        this.onOverflowTabsChange = this._onOverflowTabsChange.event;\n        this._tabsList = document.createElement('div');\n        this._tabsList.className = 'dv-tabs-container dv-horizontal';\n        this.showTabsOverflowControl = options.showTabsOverflowControl;\n        if (accessor.options.scrollbars === 'native') {\n            this._element = this._tabsList;\n        }\n        else {\n            const scrollbar = new Scrollbar(this._tabsList);\n            this._element = scrollbar.element;\n            this.addDisposables(scrollbar);\n        }\n        this.addDisposables(this._onOverflowTabsChange, this._observerDisposable, this._onWillShowOverlay, this._onDrop, this._onTabDragStart, addDisposableListener(this.element, 'pointerdown', (event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            const isLeftClick = event.button === 0;\n            if (isLeftClick) {\n                this.accessor.doSetGroupActive(this.group);\n            }\n        }), Disposable.from(() => {\n            for (const { value, disposable } of this._tabs) {\n                disposable.dispose();\n                value.dispose();\n            }\n            this._tabs = [];\n        }));\n    }\n    indexOf(id) {\n        return this._tabs.findIndex((tab) => tab.value.panel.id === id);\n    }\n    isActive(tab) {\n        return (this.selectedIndex > -1 &&\n            this._tabs[this.selectedIndex].value === tab);\n    }\n    setActivePanel(panel) {\n        let runningWidth = 0;\n        for (const tab of this._tabs) {\n            const isActivePanel = panel.id === tab.value.panel.id;\n            tab.value.setActive(isActivePanel);\n            if (isActivePanel) {\n                const element = tab.value.element;\n                const parentElement = element.parentElement;\n                if (runningWidth < parentElement.scrollLeft ||\n                    runningWidth + element.clientWidth >\n                        parentElement.scrollLeft + parentElement.clientWidth) {\n                    parentElement.scrollLeft = runningWidth;\n                }\n            }\n            runningWidth += tab.value.element.clientWidth;\n        }\n    }\n    openPanel(panel, index = this._tabs.length) {\n        if (this._tabs.find((tab) => tab.value.panel.id === panel.id)) {\n            return;\n        }\n        const tab = new Tab(panel, this.accessor, this.group);\n        tab.setContent(panel.view.tab);\n        const disposable = new CompositeDisposable(tab.onDragStart((event) => {\n            this._onTabDragStart.fire({ nativeEvent: event, panel });\n        }), tab.onPointerDown((event) => {\n            if (event.defaultPrevented) {\n                return;\n            }\n            const isFloatingGroupsEnabled = !this.accessor.options.disableFloatingGroups;\n            const isFloatingWithOnePanel = this.group.api.location.type === 'floating' &&\n                this.size === 1;\n            if (isFloatingGroupsEnabled &&\n                !isFloatingWithOnePanel &&\n                event.shiftKey) {\n                event.preventDefault();\n                const panel = this.accessor.getGroupPanel(tab.panel.id);\n                const { top, left } = tab.element.getBoundingClientRect();\n                const { top: rootTop, left: rootLeft } = this.accessor.element.getBoundingClientRect();\n                this.accessor.addFloatingGroup(panel, {\n                    x: left - rootLeft,\n                    y: top - rootTop,\n                    inDragMode: true,\n                });\n                return;\n            }\n            switch (event.button) {\n                case 0: // left click or touch\n                    if (this.group.activePanel !== panel) {\n                        this.group.model.openPanel(panel);\n                    }\n                    break;\n            }\n        }), tab.onDrop((event) => {\n            this._onDrop.fire({\n                event: event.nativeEvent,\n                index: this._tabs.findIndex((x) => x.value === tab),\n            });\n        }), tab.onWillShowOverlay((event) => {\n            this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(event, {\n                kind: 'tab',\n                panel: this.group.activePanel,\n                api: this.accessor.api,\n                group: this.group,\n                getData: getPanelData,\n            }));\n        }));\n        const value = { value: tab, disposable };\n        this.addTab(value, index);\n    }\n    delete(id) {\n        const index = this.indexOf(id);\n        const tabToRemove = this._tabs.splice(index, 1)[0];\n        const { value, disposable } = tabToRemove;\n        disposable.dispose();\n        value.dispose();\n        value.element.remove();\n    }\n    addTab(tab, index = this._tabs.length) {\n        if (index < 0 || index > this._tabs.length) {\n            throw new Error('invalid location');\n        }\n        this._tabsList.insertBefore(tab.value.element, this._tabsList.children[index]);\n        this._tabs = [\n            ...this._tabs.slice(0, index),\n            tab,\n            ...this._tabs.slice(index),\n        ];\n        if (this.selectedIndex < 0) {\n            this.selectedIndex = index;\n        }\n    }\n    toggleDropdown(options) {\n        const tabs = options.reset\n            ? []\n            : this._tabs\n                .filter((tab) => !isChildEntirelyVisibleWithinParent(tab.value.element, this._tabsList))\n                .map((x) => x.value.panel.id);\n        this._onOverflowTabsChange.fire({ tabs, reset: options.reset });\n    }\n    updateDragAndDropState() {\n        for (const tab of this._tabs) {\n            tab.value.updateDragAndDropState();\n        }\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}