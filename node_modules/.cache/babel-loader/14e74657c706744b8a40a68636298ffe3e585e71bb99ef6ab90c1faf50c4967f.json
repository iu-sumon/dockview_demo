{"ast":null,"code":"import { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class WillFocusEvent extends DockviewEvent {\n  constructor() {\n    super();\n  }\n}\n/**\n * A core api implementation that should be used across all panel-like objects\n */\nexport class PanelApiImpl extends CompositeDisposable {\n  get isFocused() {\n    return this._isFocused;\n  }\n  get isActive() {\n    return this._isActive;\n  }\n  get isVisible() {\n    return this._isVisible;\n  }\n  get width() {\n    return this._width;\n  }\n  get height() {\n    return this._height;\n  }\n  constructor(id, component) {\n    super();\n    this.id = id;\n    this.component = component;\n    this._isFocused = false;\n    this._isActive = false;\n    this._isVisible = true;\n    this._width = 0;\n    this._height = 0;\n    this._parameters = {};\n    this.panelUpdatesDisposable = new MutableDisposable();\n    this._onDidDimensionChange = new Emitter();\n    this.onDidDimensionsChange = this._onDidDimensionChange.event;\n    this._onDidChangeFocus = new Emitter();\n    this.onDidFocusChange = this._onDidChangeFocus.event;\n    //\n    this._onWillFocus = new Emitter();\n    this.onWillFocus = this._onWillFocus.event;\n    //\n    this._onDidVisibilityChange = new Emitter();\n    this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n    this._onWillVisibilityChange = new Emitter();\n    this.onWillVisibilityChange = this._onWillVisibilityChange.event;\n    this._onDidActiveChange = new Emitter();\n    this.onDidActiveChange = this._onDidActiveChange.event;\n    this._onActiveChange = new Emitter();\n    this.onActiveChange = this._onActiveChange.event;\n    this._onDidParametersChange = new Emitter();\n    this.onDidParametersChange = this._onDidParametersChange.event;\n    this.addDisposables(this.onDidFocusChange(event => {\n      this._isFocused = event.isFocused;\n    }), this.onDidActiveChange(event => {\n      this._isActive = event.isActive;\n    }), this.onDidVisibilityChange(event => {\n      this._isVisible = event.isVisible;\n    }), this.onDidDimensionsChange(event => {\n      this._width = event.width;\n      this._height = event.height;\n    }), this.panelUpdatesDisposable, this._onDidDimensionChange, this._onDidChangeFocus, this._onDidVisibilityChange, this._onDidActiveChange, this._onWillFocus, this._onActiveChange, this._onWillFocus, this._onWillVisibilityChange, this._onDidParametersChange);\n  }\n  getParameters() {\n    return this._parameters;\n  }\n  initialize(panel) {\n    this.panelUpdatesDisposable.value = this._onDidParametersChange.event(parameters => {\n      this._parameters = parameters;\n      panel.update({\n        params: parameters\n      });\n    });\n  }\n  setVisible(isVisible) {\n    this._onWillVisibilityChange.fire({\n      isVisible\n    });\n  }\n  setActive() {\n    this._onActiveChange.fire();\n  }\n  updateParameters(parameters) {\n    this._onDidParametersChange.fire(parameters);\n  }\n}","map":{"version":3,"names":["DockviewEvent","Emitter","CompositeDisposable","MutableDisposable","WillFocusEvent","constructor","PanelApiImpl","isFocused","_isFocused","isActive","_isActive","isVisible","_isVisible","width","_width","height","_height","id","component","_parameters","panelUpdatesDisposable","_onDidDimensionChange","onDidDimensionsChange","event","_onDidChangeFocus","onDidFocusChange","_onWillFocus","onWillFocus","_onDidVisibilityChange","onDidVisibilityChange","_onWillVisibilityChange","onWillVisibilityChange","_onDidActiveChange","onDidActiveChange","_onActiveChange","onActiveChange","_onDidParametersChange","onDidParametersChange","addDisposables","getParameters","initialize","panel","value","parameters","update","params","setVisible","fire","setActive","updateParameters"],"sources":["E:/dockview.demo/node_modules/dockview-core/dist/esm/api/panelApi.js"],"sourcesContent":["import { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable, MutableDisposable } from '../lifecycle';\nexport class WillFocusEvent extends DockviewEvent {\n    constructor() {\n        super();\n    }\n}\n/**\n * A core api implementation that should be used across all panel-like objects\n */\nexport class PanelApiImpl extends CompositeDisposable {\n    get isFocused() {\n        return this._isFocused;\n    }\n    get isActive() {\n        return this._isActive;\n    }\n    get isVisible() {\n        return this._isVisible;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    constructor(id, component) {\n        super();\n        this.id = id;\n        this.component = component;\n        this._isFocused = false;\n        this._isActive = false;\n        this._isVisible = true;\n        this._width = 0;\n        this._height = 0;\n        this._parameters = {};\n        this.panelUpdatesDisposable = new MutableDisposable();\n        this._onDidDimensionChange = new Emitter();\n        this.onDidDimensionsChange = this._onDidDimensionChange.event;\n        this._onDidChangeFocus = new Emitter();\n        this.onDidFocusChange = this._onDidChangeFocus.event;\n        //\n        this._onWillFocus = new Emitter();\n        this.onWillFocus = this._onWillFocus.event;\n        //\n        this._onDidVisibilityChange = new Emitter();\n        this.onDidVisibilityChange = this._onDidVisibilityChange.event;\n        this._onWillVisibilityChange = new Emitter();\n        this.onWillVisibilityChange = this._onWillVisibilityChange.event;\n        this._onDidActiveChange = new Emitter();\n        this.onDidActiveChange = this._onDidActiveChange.event;\n        this._onActiveChange = new Emitter();\n        this.onActiveChange = this._onActiveChange.event;\n        this._onDidParametersChange = new Emitter();\n        this.onDidParametersChange = this._onDidParametersChange.event;\n        this.addDisposables(this.onDidFocusChange((event) => {\n            this._isFocused = event.isFocused;\n        }), this.onDidActiveChange((event) => {\n            this._isActive = event.isActive;\n        }), this.onDidVisibilityChange((event) => {\n            this._isVisible = event.isVisible;\n        }), this.onDidDimensionsChange((event) => {\n            this._width = event.width;\n            this._height = event.height;\n        }), this.panelUpdatesDisposable, this._onDidDimensionChange, this._onDidChangeFocus, this._onDidVisibilityChange, this._onDidActiveChange, this._onWillFocus, this._onActiveChange, this._onWillFocus, this._onWillVisibilityChange, this._onDidParametersChange);\n    }\n    getParameters() {\n        return this._parameters;\n    }\n    initialize(panel) {\n        this.panelUpdatesDisposable.value = this._onDidParametersChange.event((parameters) => {\n            this._parameters = parameters;\n            panel.update({\n                params: parameters,\n            });\n        });\n    }\n    setVisible(isVisible) {\n        this._onWillVisibilityChange.fire({ isVisible });\n    }\n    setActive() {\n        this._onActiveChange.fire();\n    }\n    updateParameters(parameters) {\n        this._onDidParametersChange.fire(parameters);\n    }\n}\n"],"mappings":"AAAA,SAASA,aAAa,EAAEC,OAAO,QAAQ,WAAW;AAClD,SAASC,mBAAmB,EAAEC,iBAAiB,QAAQ,cAAc;AACrE,OAAO,MAAMC,cAAc,SAASJ,aAAa,CAAC;EAC9CK,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC,CAAC;EACX;AACJ;AACA;AACA;AACA;AACA,OAAO,MAAMC,YAAY,SAASJ,mBAAmB,CAAC;EAClD,IAAIK,SAASA,CAAA,EAAG;IACZ,OAAO,IAAI,CAACC,UAAU;EAC1B;EACA,IAAIC,QAAQA,CAAA,EAAG;IACX,OAAO,IAAI,CAACC,SAAS;EACzB;EACA,IAAIC,SAASA,CAAA,EAAG;IACZ,OAAO,IAAI,CAACC,UAAU;EAC1B;EACA,IAAIC,KAAKA,CAAA,EAAG;IACR,OAAO,IAAI,CAACC,MAAM;EACtB;EACA,IAAIC,MAAMA,CAAA,EAAG;IACT,OAAO,IAAI,CAACC,OAAO;EACvB;EACAX,WAAWA,CAACY,EAAE,EAAEC,SAAS,EAAE;IACvB,KAAK,CAAC,CAAC;IACP,IAAI,CAACD,EAAE,GAAGA,EAAE;IACZ,IAAI,CAACC,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACV,UAAU,GAAG,KAAK;IACvB,IAAI,CAACE,SAAS,GAAG,KAAK;IACtB,IAAI,CAACE,UAAU,GAAG,IAAI;IACtB,IAAI,CAACE,MAAM,GAAG,CAAC;IACf,IAAI,CAACE,OAAO,GAAG,CAAC;IAChB,IAAI,CAACG,WAAW,GAAG,CAAC,CAAC;IACrB,IAAI,CAACC,sBAAsB,GAAG,IAAIjB,iBAAiB,CAAC,CAAC;IACrD,IAAI,CAACkB,qBAAqB,GAAG,IAAIpB,OAAO,CAAC,CAAC;IAC1C,IAAI,CAACqB,qBAAqB,GAAG,IAAI,CAACD,qBAAqB,CAACE,KAAK;IAC7D,IAAI,CAACC,iBAAiB,GAAG,IAAIvB,OAAO,CAAC,CAAC;IACtC,IAAI,CAACwB,gBAAgB,GAAG,IAAI,CAACD,iBAAiB,CAACD,KAAK;IACpD;IACA,IAAI,CAACG,YAAY,GAAG,IAAIzB,OAAO,CAAC,CAAC;IACjC,IAAI,CAAC0B,WAAW,GAAG,IAAI,CAACD,YAAY,CAACH,KAAK;IAC1C;IACA,IAAI,CAACK,sBAAsB,GAAG,IAAI3B,OAAO,CAAC,CAAC;IAC3C,IAAI,CAAC4B,qBAAqB,GAAG,IAAI,CAACD,sBAAsB,CAACL,KAAK;IAC9D,IAAI,CAACO,uBAAuB,GAAG,IAAI7B,OAAO,CAAC,CAAC;IAC5C,IAAI,CAAC8B,sBAAsB,GAAG,IAAI,CAACD,uBAAuB,CAACP,KAAK;IAChE,IAAI,CAACS,kBAAkB,GAAG,IAAI/B,OAAO,CAAC,CAAC;IACvC,IAAI,CAACgC,iBAAiB,GAAG,IAAI,CAACD,kBAAkB,CAACT,KAAK;IACtD,IAAI,CAACW,eAAe,GAAG,IAAIjC,OAAO,CAAC,CAAC;IACpC,IAAI,CAACkC,cAAc,GAAG,IAAI,CAACD,eAAe,CAACX,KAAK;IAChD,IAAI,CAACa,sBAAsB,GAAG,IAAInC,OAAO,CAAC,CAAC;IAC3C,IAAI,CAACoC,qBAAqB,GAAG,IAAI,CAACD,sBAAsB,CAACb,KAAK;IAC9D,IAAI,CAACe,cAAc,CAAC,IAAI,CAACb,gBAAgB,CAAEF,KAAK,IAAK;MACjD,IAAI,CAACf,UAAU,GAAGe,KAAK,CAAChB,SAAS;IACrC,CAAC,CAAC,EAAE,IAAI,CAAC0B,iBAAiB,CAAEV,KAAK,IAAK;MAClC,IAAI,CAACb,SAAS,GAAGa,KAAK,CAACd,QAAQ;IACnC,CAAC,CAAC,EAAE,IAAI,CAACoB,qBAAqB,CAAEN,KAAK,IAAK;MACtC,IAAI,CAACX,UAAU,GAAGW,KAAK,CAACZ,SAAS;IACrC,CAAC,CAAC,EAAE,IAAI,CAACW,qBAAqB,CAAEC,KAAK,IAAK;MACtC,IAAI,CAACT,MAAM,GAAGS,KAAK,CAACV,KAAK;MACzB,IAAI,CAACG,OAAO,GAAGO,KAAK,CAACR,MAAM;IAC/B,CAAC,CAAC,EAAE,IAAI,CAACK,sBAAsB,EAAE,IAAI,CAACC,qBAAqB,EAAE,IAAI,CAACG,iBAAiB,EAAE,IAAI,CAACI,sBAAsB,EAAE,IAAI,CAACI,kBAAkB,EAAE,IAAI,CAACN,YAAY,EAAE,IAAI,CAACQ,eAAe,EAAE,IAAI,CAACR,YAAY,EAAE,IAAI,CAACI,uBAAuB,EAAE,IAAI,CAACM,sBAAsB,CAAC;EACrQ;EACAG,aAAaA,CAAA,EAAG;IACZ,OAAO,IAAI,CAACpB,WAAW;EAC3B;EACAqB,UAAUA,CAACC,KAAK,EAAE;IACd,IAAI,CAACrB,sBAAsB,CAACsB,KAAK,GAAG,IAAI,CAACN,sBAAsB,CAACb,KAAK,CAAEoB,UAAU,IAAK;MAClF,IAAI,CAACxB,WAAW,GAAGwB,UAAU;MAC7BF,KAAK,CAACG,MAAM,CAAC;QACTC,MAAM,EAAEF;MACZ,CAAC,CAAC;IACN,CAAC,CAAC;EACN;EACAG,UAAUA,CAACnC,SAAS,EAAE;IAClB,IAAI,CAACmB,uBAAuB,CAACiB,IAAI,CAAC;MAAEpC;IAAU,CAAC,CAAC;EACpD;EACAqC,SAASA,CAAA,EAAG;IACR,IAAI,CAACd,eAAe,CAACa,IAAI,CAAC,CAAC;EAC/B;EACAE,gBAAgBA,CAACN,UAAU,EAAE;IACzB,IAAI,CAACP,sBAAsB,CAACW,IAAI,CAACJ,UAAU,CAAC;EAChD;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}