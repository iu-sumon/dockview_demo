{"ast":null,"code":"import React from 'react';\nimport { createSplitview, PROPERTY_KEYS_SPLITVIEW } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactPanelView } from './view';\nfunction extractCoreOptions(props) {\n  const coreOptions = PROPERTY_KEYS_SPLITVIEW.reduce((obj, key) => {\n    if (key in props) {\n      obj[key] = props[key];\n    }\n    return obj;\n  }, {});\n  return coreOptions;\n}\nexport const SplitviewReact = React.forwardRef((props, ref) => {\n  const domRef = React.useRef(null);\n  const splitviewRef = React.useRef();\n  const [portals, addPortal] = usePortalsLifecycle();\n  React.useImperativeHandle(ref, () => domRef.current, []);\n  const prevProps = React.useRef({});\n  React.useEffect(() => {\n    const changes = {};\n    PROPERTY_KEYS_SPLITVIEW.forEach(propKey => {\n      const key = propKey;\n      const propValue = props[key];\n      if (key in props && propValue !== prevProps.current[key]) {\n        changes[key] = propValue;\n      }\n    });\n    if (splitviewRef.current) {\n      splitviewRef.current.updateOptions(changes);\n    } else {\n      // not yet fully initialized\n    }\n    prevProps.current = props;\n  }, PROPERTY_KEYS_SPLITVIEW.map(key => props[key]));\n  React.useEffect(() => {\n    if (!domRef.current) {\n      return () => {\n        // noop\n      };\n    }\n    const frameworkOptions = {\n      createComponent: options => {\n        return new ReactPanelView(options.id, options.name, props.components[options.name], {\n          addPortal\n        });\n      }\n    };\n    const api = createSplitview(domRef.current, Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n    const {\n      clientWidth,\n      clientHeight\n    } = domRef.current;\n    api.layout(clientWidth, clientHeight);\n    if (props.onReady) {\n      props.onReady({\n        api\n      });\n    }\n    splitviewRef.current = api;\n    return () => {\n      splitviewRef.current = undefined;\n      api.dispose();\n    };\n  }, []);\n  React.useEffect(() => {\n    if (!splitviewRef.current) {\n      return;\n    }\n    splitviewRef.current.updateOptions({\n      createComponent: options => {\n        return new ReactPanelView(options.id, options.name, props.components[options.name], {\n          addPortal\n        });\n      }\n    });\n  }, [props.components]);\n  return React.createElement(\"div\", {\n    style: {\n      height: '100%',\n      width: '100%'\n    },\n    ref: domRef\n  }, portals);\n});\nSplitviewReact.displayName = 'SplitviewComponent';","map":{"version":3,"names":["React","createSplitview","PROPERTY_KEYS_SPLITVIEW","usePortalsLifecycle","ReactPanelView","extractCoreOptions","props","coreOptions","reduce","obj","key","SplitviewReact","forwardRef","ref","domRef","useRef","splitviewRef","portals","addPortal","useImperativeHandle","current","prevProps","useEffect","changes","forEach","propKey","propValue","updateOptions","map","frameworkOptions","createComponent","options","id","name","components","api","Object","assign","clientWidth","clientHeight","layout","onReady","undefined","dispose","createElement","style","height","width","displayName"],"sources":["E:/dockview.demo/node_modules/dockview/dist/esm/splitview/splitview.js"],"sourcesContent":["import React from 'react';\nimport { createSplitview, PROPERTY_KEYS_SPLITVIEW, } from 'dockview-core';\nimport { usePortalsLifecycle } from '../react';\nimport { ReactPanelView } from './view';\nfunction extractCoreOptions(props) {\n    const coreOptions = PROPERTY_KEYS_SPLITVIEW.reduce((obj, key) => {\n        if (key in props) {\n            obj[key] = props[key];\n        }\n        return obj;\n    }, {});\n    return coreOptions;\n}\nexport const SplitviewReact = React.forwardRef((props, ref) => {\n    const domRef = React.useRef(null);\n    const splitviewRef = React.useRef();\n    const [portals, addPortal] = usePortalsLifecycle();\n    React.useImperativeHandle(ref, () => domRef.current, []);\n    const prevProps = React.useRef({});\n    React.useEffect(() => {\n        const changes = {};\n        PROPERTY_KEYS_SPLITVIEW.forEach((propKey) => {\n            const key = propKey;\n            const propValue = props[key];\n            if (key in props && propValue !== prevProps.current[key]) {\n                changes[key] = propValue;\n            }\n        });\n        if (splitviewRef.current) {\n            splitviewRef.current.updateOptions(changes);\n        }\n        else {\n            // not yet fully initialized\n        }\n        prevProps.current = props;\n    }, PROPERTY_KEYS_SPLITVIEW.map((key) => props[key]));\n    React.useEffect(() => {\n        if (!domRef.current) {\n            return () => {\n                // noop\n            };\n        }\n        const frameworkOptions = {\n            createComponent: (options) => {\n                return new ReactPanelView(options.id, options.name, props.components[options.name], { addPortal });\n            },\n        };\n        const api = createSplitview(domRef.current, Object.assign(Object.assign({}, extractCoreOptions(props)), frameworkOptions));\n        const { clientWidth, clientHeight } = domRef.current;\n        api.layout(clientWidth, clientHeight);\n        if (props.onReady) {\n            props.onReady({ api });\n        }\n        splitviewRef.current = api;\n        return () => {\n            splitviewRef.current = undefined;\n            api.dispose();\n        };\n    }, []);\n    React.useEffect(() => {\n        if (!splitviewRef.current) {\n            return;\n        }\n        splitviewRef.current.updateOptions({\n            createComponent: (options) => {\n                return new ReactPanelView(options.id, options.name, props.components[options.name], { addPortal });\n            },\n        });\n    }, [props.components]);\n    return (React.createElement(\"div\", { style: { height: '100%', width: '100%' }, ref: domRef }, portals));\n});\nSplitviewReact.displayName = 'SplitviewComponent';\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}