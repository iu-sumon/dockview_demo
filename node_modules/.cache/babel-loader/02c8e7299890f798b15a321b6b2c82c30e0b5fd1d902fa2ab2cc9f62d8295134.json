{"ast":null,"code":"import { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { getPanelData, LocalSelectionTransfer, PanelTransfer } from '../../../dnd/dataTransfer';\nimport { toggleClass } from '../../../dom';\nimport { Droptarget } from '../../../dnd/droptarget';\nimport { DragHandler } from '../../../dnd/abstractDragHandler';\nimport { addGhostImage } from '../../../dnd/ghost';\nclass TabDragHandler extends DragHandler {\n  constructor(element, accessor, group, panel) {\n    super(element);\n    this.accessor = accessor;\n    this.group = group;\n    this.panel = panel;\n    this.panelTransfer = LocalSelectionTransfer.getInstance();\n  }\n  getData(event) {\n    this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, this.panel.id)], PanelTransfer.prototype);\n    return {\n      dispose: () => {\n        this.panelTransfer.clearData(PanelTransfer.prototype);\n      }\n    };\n  }\n}\nexport class Tab extends CompositeDisposable {\n  get element() {\n    return this._element;\n  }\n  constructor(panel, accessor, group) {\n    super();\n    this.panel = panel;\n    this.accessor = accessor;\n    this.group = group;\n    this.content = undefined;\n    this._onPointDown = new Emitter();\n    this.onPointerDown = this._onPointDown.event;\n    this._onDropped = new Emitter();\n    this.onDrop = this._onDropped.event;\n    this._onDragStart = new Emitter();\n    this.onDragStart = this._onDragStart.event;\n    this._element = document.createElement('div');\n    this._element.className = 'dv-tab';\n    this._element.tabIndex = 0;\n    this._element.draggable = !this.accessor.options.disableDnd;\n    toggleClass(this.element, 'dv-inactive-tab', true);\n    const dragHandler = new TabDragHandler(this._element, this.accessor, this.group, this.panel);\n    this.dropTarget = new Droptarget(this._element, {\n      acceptedTargetZones: ['left', 'right'],\n      overlayModel: {\n        activationSize: {\n          value: 50,\n          type: 'percentage'\n        }\n      },\n      canDisplayOverlay: (event, position) => {\n        if (this.group.locked) {\n          return false;\n        }\n        const data = getPanelData();\n        if (data && this.accessor.id === data.viewId) {\n          return true;\n        }\n        return this.group.model.canDisplayOverlay(event, position, 'tab');\n      },\n      getOverrideTarget: () => {\n        var _a;\n        return (_a = group.model.dropTargetContainer) === null || _a === void 0 ? void 0 : _a.model;\n      }\n    });\n    this.onWillShowOverlay = this.dropTarget.onWillShowOverlay;\n    this.addDisposables(this._onPointDown, this._onDropped, this._onDragStart, dragHandler.onDragStart(event => {\n      if (event.dataTransfer) {\n        const style = getComputedStyle(this.element);\n        const newNode = this.element.cloneNode(true);\n        Array.from(style).forEach(key => newNode.style.setProperty(key, style.getPropertyValue(key), style.getPropertyPriority(key)));\n        newNode.style.position = 'absolute';\n        addGhostImage(event.dataTransfer, newNode, {\n          y: -10,\n          x: 30\n        });\n      }\n      this._onDragStart.fire(event);\n    }), dragHandler, addDisposableListener(this._element, 'pointerdown', event => {\n      this._onPointDown.fire(event);\n    }), this.dropTarget.onDrop(event => {\n      this._onDropped.fire(event);\n    }), this.dropTarget);\n  }\n  setActive(isActive) {\n    toggleClass(this.element, 'dv-active-tab', isActive);\n    toggleClass(this.element, 'dv-inactive-tab', !isActive);\n  }\n  setContent(part) {\n    if (this.content) {\n      this._element.removeChild(this.content.element);\n    }\n    this.content = part;\n    this._element.appendChild(this.content.element);\n  }\n  updateDragAndDropState() {\n    this._element.draggable = !this.accessor.options.disableDnd;\n  }\n  dispose() {\n    super.dispose();\n  }\n}","map":{"version":3,"names":["addDisposableListener","Emitter","CompositeDisposable","getPanelData","LocalSelectionTransfer","PanelTransfer","toggleClass","Droptarget","DragHandler","addGhostImage","TabDragHandler","constructor","element","accessor","group","panel","panelTransfer","getInstance","getData","event","setData","id","prototype","dispose","clearData","Tab","_element","content","undefined","_onPointDown","onPointerDown","_onDropped","onDrop","_onDragStart","onDragStart","document","createElement","className","tabIndex","draggable","options","disableDnd","dragHandler","dropTarget","acceptedTargetZones","overlayModel","activationSize","value","type","canDisplayOverlay","position","locked","data","viewId","model","getOverrideTarget","_a","dropTargetContainer","onWillShowOverlay","addDisposables","dataTransfer","style","getComputedStyle","newNode","cloneNode","Array","from","forEach","key","setProperty","getPropertyValue","getPropertyPriority","y","x","fire","setActive","isActive","setContent","part","removeChild","appendChild","updateDragAndDropState"],"sources":["E:/dockview.demo/node_modules/dockview-core/dist/esm/dockview/components/tab/tab.js"],"sourcesContent":["import { addDisposableListener, Emitter } from '../../../events';\nimport { CompositeDisposable } from '../../../lifecycle';\nimport { getPanelData, LocalSelectionTransfer, PanelTransfer, } from '../../../dnd/dataTransfer';\nimport { toggleClass } from '../../../dom';\nimport { Droptarget, } from '../../../dnd/droptarget';\nimport { DragHandler } from '../../../dnd/abstractDragHandler';\nimport { addGhostImage } from '../../../dnd/ghost';\nclass TabDragHandler extends DragHandler {\n    constructor(element, accessor, group, panel) {\n        super(element);\n        this.accessor = accessor;\n        this.group = group;\n        this.panel = panel;\n        this.panelTransfer = LocalSelectionTransfer.getInstance();\n    }\n    getData(event) {\n        this.panelTransfer.setData([new PanelTransfer(this.accessor.id, this.group.id, this.panel.id)], PanelTransfer.prototype);\n        return {\n            dispose: () => {\n                this.panelTransfer.clearData(PanelTransfer.prototype);\n            },\n        };\n    }\n}\nexport class Tab extends CompositeDisposable {\n    get element() {\n        return this._element;\n    }\n    constructor(panel, accessor, group) {\n        super();\n        this.panel = panel;\n        this.accessor = accessor;\n        this.group = group;\n        this.content = undefined;\n        this._onPointDown = new Emitter();\n        this.onPointerDown = this._onPointDown.event;\n        this._onDropped = new Emitter();\n        this.onDrop = this._onDropped.event;\n        this._onDragStart = new Emitter();\n        this.onDragStart = this._onDragStart.event;\n        this._element = document.createElement('div');\n        this._element.className = 'dv-tab';\n        this._element.tabIndex = 0;\n        this._element.draggable = !this.accessor.options.disableDnd;\n        toggleClass(this.element, 'dv-inactive-tab', true);\n        const dragHandler = new TabDragHandler(this._element, this.accessor, this.group, this.panel);\n        this.dropTarget = new Droptarget(this._element, {\n            acceptedTargetZones: ['left', 'right'],\n            overlayModel: { activationSize: { value: 50, type: 'percentage' } },\n            canDisplayOverlay: (event, position) => {\n                if (this.group.locked) {\n                    return false;\n                }\n                const data = getPanelData();\n                if (data && this.accessor.id === data.viewId) {\n                    return true;\n                }\n                return this.group.model.canDisplayOverlay(event, position, 'tab');\n            },\n            getOverrideTarget: () => { var _a; return (_a = group.model.dropTargetContainer) === null || _a === void 0 ? void 0 : _a.model; },\n        });\n        this.onWillShowOverlay = this.dropTarget.onWillShowOverlay;\n        this.addDisposables(this._onPointDown, this._onDropped, this._onDragStart, dragHandler.onDragStart((event) => {\n            if (event.dataTransfer) {\n                const style = getComputedStyle(this.element);\n                const newNode = this.element.cloneNode(true);\n                Array.from(style).forEach((key) => newNode.style.setProperty(key, style.getPropertyValue(key), style.getPropertyPriority(key)));\n                newNode.style.position = 'absolute';\n                addGhostImage(event.dataTransfer, newNode, {\n                    y: -10,\n                    x: 30,\n                });\n            }\n            this._onDragStart.fire(event);\n        }), dragHandler, addDisposableListener(this._element, 'pointerdown', (event) => {\n            this._onPointDown.fire(event);\n        }), this.dropTarget.onDrop((event) => {\n            this._onDropped.fire(event);\n        }), this.dropTarget);\n    }\n    setActive(isActive) {\n        toggleClass(this.element, 'dv-active-tab', isActive);\n        toggleClass(this.element, 'dv-inactive-tab', !isActive);\n    }\n    setContent(part) {\n        if (this.content) {\n            this._element.removeChild(this.content.element);\n        }\n        this.content = part;\n        this._element.appendChild(this.content.element);\n    }\n    updateDragAndDropState() {\n        this._element.draggable = !this.accessor.options.disableDnd;\n    }\n    dispose() {\n        super.dispose();\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}