{"ast":null,"code":"import { toggleClass } from '../dom';\nimport { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { DragAndDropObserver } from './dnd';\nimport { clamp } from '../math';\nexport class WillShowOverlayEvent extends DockviewEvent {\n  get nativeEvent() {\n    return this.options.nativeEvent;\n  }\n  get position() {\n    return this.options.position;\n  }\n  constructor(options) {\n    super();\n    this.options = options;\n  }\n}\nexport function directionToPosition(direction) {\n  switch (direction) {\n    case 'above':\n      return 'top';\n    case 'below':\n      return 'bottom';\n    case 'left':\n      return 'left';\n    case 'right':\n      return 'right';\n    case 'within':\n      return 'center';\n    default:\n      throw new Error(`invalid direction '${direction}'`);\n  }\n}\nexport function positionToDirection(position) {\n  switch (position) {\n    case 'top':\n      return 'above';\n    case 'bottom':\n      return 'below';\n    case 'left':\n      return 'left';\n    case 'right':\n      return 'right';\n    case 'center':\n      return 'within';\n    default:\n      throw new Error(`invalid position '${position}'`);\n  }\n}\nconst DEFAULT_ACTIVATION_SIZE = {\n  value: 20,\n  type: 'percentage'\n};\nconst DEFAULT_SIZE = {\n  value: 50,\n  type: 'percentage'\n};\nconst SMALL_WIDTH_BOUNDARY = 100;\nconst SMALL_HEIGHT_BOUNDARY = 100;\nexport class Droptarget extends CompositeDisposable {\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(value) {\n    this._disabled = value;\n  }\n  get state() {\n    return this._state;\n  }\n  constructor(element, options) {\n    super();\n    this.element = element;\n    this.options = options;\n    this._onDrop = new Emitter();\n    this.onDrop = this._onDrop.event;\n    this._onWillShowOverlay = new Emitter();\n    this.onWillShowOverlay = this._onWillShowOverlay.event;\n    this._disabled = false;\n    // use a set to take advantage of #<set>.has\n    this._acceptedTargetZonesSet = new Set(this.options.acceptedTargetZones);\n    this.dnd = new DragAndDropObserver(this.element, {\n      onDragEnter: () => {\n        var _a, _b, _c;\n        (_c = (_b = (_a = this.options).getOverrideTarget) === null || _b === void 0 ? void 0 : _b.call(_a)) === null || _c === void 0 ? void 0 : _c.getElements();\n      },\n      onDragOver: e => {\n        var _a, _b, _c, _d, _e, _f, _g;\n        Droptarget.ACTUAL_TARGET = this;\n        const overrideTarget = (_b = (_a = this.options).getOverrideTarget) === null || _b === void 0 ? void 0 : _b.call(_a);\n        if (this._acceptedTargetZonesSet.size === 0) {\n          if (overrideTarget) {\n            return;\n          }\n          this.removeDropTarget();\n          return;\n        }\n        const target = (_e = (_d = (_c = this.options).getOverlayOutline) === null || _d === void 0 ? void 0 : _d.call(_c)) !== null && _e !== void 0 ? _e : this.element;\n        const width = target.offsetWidth;\n        const height = target.offsetHeight;\n        if (width === 0 || height === 0) {\n          return; // avoid div!0\n        }\n        const rect = e.currentTarget.getBoundingClientRect();\n        const x = ((_f = e.clientX) !== null && _f !== void 0 ? _f : 0) - rect.left;\n        const y = ((_g = e.clientY) !== null && _g !== void 0 ? _g : 0) - rect.top;\n        const quadrant = this.calculateQuadrant(this._acceptedTargetZonesSet, x, y, width, height);\n        /**\n         * If the event has already been used by another DropTarget instance\n         * then don't show a second drop target, only one target should be\n         * active at any one time\n         */\n        if (this.isAlreadyUsed(e) || quadrant === null) {\n          // no drop target should be displayed\n          this.removeDropTarget();\n          return;\n        }\n        if (!this.options.canDisplayOverlay(e, quadrant)) {\n          if (overrideTarget) {\n            return;\n          }\n          this.removeDropTarget();\n          return;\n        }\n        const willShowOverlayEvent = new WillShowOverlayEvent({\n          nativeEvent: e,\n          position: quadrant\n        });\n        /**\n         * Provide an opportunity to prevent the overlay appearing and in turn\n         * any dnd behaviours\n         */\n        this._onWillShowOverlay.fire(willShowOverlayEvent);\n        if (willShowOverlayEvent.defaultPrevented) {\n          this.removeDropTarget();\n          return;\n        }\n        this.markAsUsed(e);\n        if (overrideTarget) {\n          //\n        } else if (!this.targetElement) {\n          this.targetElement = document.createElement('div');\n          this.targetElement.className = 'dv-drop-target-dropzone';\n          this.overlayElement = document.createElement('div');\n          this.overlayElement.className = 'dv-drop-target-selection';\n          this._state = 'center';\n          this.targetElement.appendChild(this.overlayElement);\n          target.classList.add('dv-drop-target');\n          target.append(this.targetElement);\n          // this.overlayElement.style.opacity = '0';\n          // requestAnimationFrame(() => {\n          //     if (this.overlayElement) {\n          //         this.overlayElement.style.opacity = '';\n          //     }\n          // });\n        }\n        this.toggleClasses(quadrant, width, height);\n        this._state = quadrant;\n      },\n      onDragLeave: () => {\n        var _a, _b;\n        const target = (_b = (_a = this.options).getOverrideTarget) === null || _b === void 0 ? void 0 : _b.call(_a);\n        if (target) {\n          return;\n        }\n        this.removeDropTarget();\n      },\n      onDragEnd: e => {\n        var _a, _b;\n        const target = (_b = (_a = this.options).getOverrideTarget) === null || _b === void 0 ? void 0 : _b.call(_a);\n        if (target && Droptarget.ACTUAL_TARGET === this) {\n          if (this._state) {\n            // only stop the propagation of the event if we are dealing with it\n            // which is only when the target has state\n            e.stopPropagation();\n            this._onDrop.fire({\n              position: this._state,\n              nativeEvent: e\n            });\n          }\n        }\n        this.removeDropTarget();\n        target === null || target === void 0 ? void 0 : target.clear();\n      },\n      onDrop: e => {\n        var _a, _b, _c;\n        e.preventDefault();\n        const state = this._state;\n        this.removeDropTarget();\n        (_c = (_b = (_a = this.options).getOverrideTarget) === null || _b === void 0 ? void 0 : _b.call(_a)) === null || _c === void 0 ? void 0 : _c.clear();\n        if (state) {\n          // only stop the propagation of the event if we are dealing with it\n          // which is only when the target has state\n          e.stopPropagation();\n          this._onDrop.fire({\n            position: state,\n            nativeEvent: e\n          });\n        }\n      }\n    });\n    this.addDisposables(this._onDrop, this._onWillShowOverlay, this.dnd);\n  }\n  setTargetZones(acceptedTargetZones) {\n    this._acceptedTargetZonesSet = new Set(acceptedTargetZones);\n  }\n  setOverlayModel(model) {\n    this.options.overlayModel = model;\n  }\n  dispose() {\n    this.removeDropTarget();\n    super.dispose();\n  }\n  /**\n   * Add a property to the event object for other potential listeners to check\n   */\n  markAsUsed(event) {\n    event[Droptarget.USED_EVENT_ID] = true;\n  }\n  /**\n   * Check is the event has already been used by another instance of DropTarget\n   */\n  isAlreadyUsed(event) {\n    const value = event[Droptarget.USED_EVENT_ID];\n    return typeof value === 'boolean' && value;\n  }\n  toggleClasses(quadrant, width, height) {\n    var _a, _b, _c, _d, _e, _f, _g;\n    const target = (_b = (_a = this.options).getOverrideTarget) === null || _b === void 0 ? void 0 : _b.call(_a);\n    if (!target && !this.overlayElement) {\n      return;\n    }\n    const isSmallX = width < SMALL_WIDTH_BOUNDARY;\n    const isSmallY = height < SMALL_HEIGHT_BOUNDARY;\n    const isLeft = quadrant === 'left';\n    const isRight = quadrant === 'right';\n    const isTop = quadrant === 'top';\n    const isBottom = quadrant === 'bottom';\n    const rightClass = !isSmallX && isRight;\n    const leftClass = !isSmallX && isLeft;\n    const topClass = !isSmallY && isTop;\n    const bottomClass = !isSmallY && isBottom;\n    let size = 1;\n    const sizeOptions = (_d = (_c = this.options.overlayModel) === null || _c === void 0 ? void 0 : _c.size) !== null && _d !== void 0 ? _d : DEFAULT_SIZE;\n    if (sizeOptions.type === 'percentage') {\n      size = clamp(sizeOptions.value, 0, 100) / 100;\n    } else {\n      if (rightClass || leftClass) {\n        size = clamp(0, sizeOptions.value, width) / width;\n      }\n      if (topClass || bottomClass) {\n        size = clamp(0, sizeOptions.value, height) / height;\n      }\n    }\n    if (target) {\n      const outlineEl = (_g = (_f = (_e = this.options).getOverlayOutline) === null || _f === void 0 ? void 0 : _f.call(_e)) !== null && _g !== void 0 ? _g : this.element;\n      const elBox = outlineEl.getBoundingClientRect();\n      const ta = target.getElements(undefined, outlineEl);\n      const el = ta.root;\n      const overlay = ta.overlay;\n      const bigbox = el.getBoundingClientRect();\n      const rootTop = elBox.top - bigbox.top;\n      const rootLeft = elBox.left - bigbox.left;\n      const box = {\n        top: rootTop,\n        left: rootLeft,\n        width: width,\n        height: height\n      };\n      if (rightClass) {\n        box.left = rootLeft + width * (1 - size);\n        box.width = width * size;\n      } else if (leftClass) {\n        box.width = width * size;\n      } else if (topClass) {\n        box.height = height * size;\n      } else if (bottomClass) {\n        box.top = rootTop + height * (1 - size);\n        box.height = height * size;\n      }\n      if (isSmallX && isLeft) {\n        box.width = 4;\n      }\n      if (isSmallX && isRight) {\n        box.left = rootLeft + width - 4;\n        box.width = 4;\n      }\n      const topPx = `${Math.round(box.top)}px`;\n      const leftPx = `${Math.round(box.left)}px`;\n      const widthPx = `${Math.round(box.width)}px`;\n      const heightPx = `${Math.round(box.height)}px`;\n      if (overlay.style.top === topPx && overlay.style.left === leftPx && overlay.style.width === widthPx && overlay.style.height === heightPx) {\n        return;\n      }\n      overlay.style.top = topPx;\n      overlay.style.left = leftPx;\n      overlay.style.width = widthPx;\n      overlay.style.height = heightPx;\n      overlay.style.visibility = 'visible';\n      overlay.className = `dv-drop-target-anchor${this.options.className ? ` ${this.options.className}` : ''}`;\n      toggleClass(overlay, 'dv-drop-target-left', isLeft);\n      toggleClass(overlay, 'dv-drop-target-right', isRight);\n      toggleClass(overlay, 'dv-drop-target-top', isTop);\n      toggleClass(overlay, 'dv-drop-target-bottom', isBottom);\n      toggleClass(overlay, 'dv-drop-target-center', quadrant === 'center');\n      if (ta.changed) {\n        toggleClass(overlay, 'dv-drop-target-anchor-container-changed', true);\n        setTimeout(() => {\n          toggleClass(overlay, 'dv-drop-target-anchor-container-changed', false);\n        }, 10);\n      }\n      return;\n    }\n    if (!this.overlayElement) {\n      return;\n    }\n    const box = {\n      top: '0px',\n      left: '0px',\n      width: '100%',\n      height: '100%'\n    };\n    /**\n     * You can also achieve the overlay placement using the transform CSS property\n     * to translate and scale the element however this has the undesired effect of\n     * 'skewing' the element. Comment left here for anybody that ever revisits this.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/CSS/transform\n     *\n     * right\n     * translateX(${100 * (1 - size) / 2}%) scaleX(${scale})\n     *\n     * left\n     * translateX(-${100 * (1 - size) / 2}%) scaleX(${scale})\n     *\n     * top\n     * translateY(-${100 * (1 - size) / 2}%) scaleY(${scale})\n     *\n     * bottom\n     * translateY(${100 * (1 - size) / 2}%) scaleY(${scale})\n     */\n    if (rightClass) {\n      box.left = `${100 * (1 - size)}%`;\n      box.width = `${100 * size}%`;\n    } else if (leftClass) {\n      box.width = `${100 * size}%`;\n    } else if (topClass) {\n      box.height = `${100 * size}%`;\n    } else if (bottomClass) {\n      box.top = `${100 * (1 - size)}%`;\n      box.height = `${100 * size}%`;\n    }\n    this.overlayElement.style.top = box.top;\n    this.overlayElement.style.left = box.left;\n    this.overlayElement.style.width = box.width;\n    this.overlayElement.style.height = box.height;\n    toggleClass(this.overlayElement, 'dv-drop-target-small-vertical', isSmallY);\n    toggleClass(this.overlayElement, 'dv-drop-target-small-horizontal', isSmallX);\n    toggleClass(this.overlayElement, 'dv-drop-target-left', isLeft);\n    toggleClass(this.overlayElement, 'dv-drop-target-right', isRight);\n    toggleClass(this.overlayElement, 'dv-drop-target-top', isTop);\n    toggleClass(this.overlayElement, 'dv-drop-target-bottom', isBottom);\n    toggleClass(this.overlayElement, 'dv-drop-target-center', quadrant === 'center');\n  }\n  calculateQuadrant(overlayType, x, y, width, height) {\n    var _a, _b;\n    const activationSizeOptions = (_b = (_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.activationSize) !== null && _b !== void 0 ? _b : DEFAULT_ACTIVATION_SIZE;\n    const isPercentage = activationSizeOptions.type === 'percentage';\n    if (isPercentage) {\n      return calculateQuadrantAsPercentage(overlayType, x, y, width, height, activationSizeOptions.value);\n    }\n    return calculateQuadrantAsPixels(overlayType, x, y, width, height, activationSizeOptions.value);\n  }\n  removeDropTarget() {\n    var _a;\n    if (this.targetElement) {\n      this._state = undefined;\n      (_a = this.targetElement.parentElement) === null || _a === void 0 ? void 0 : _a.classList.remove('dv-drop-target');\n      this.targetElement.remove();\n      this.targetElement = undefined;\n      this.overlayElement = undefined;\n    }\n  }\n}\nDroptarget.USED_EVENT_ID = '__dockview_droptarget_event_is_used__';\nexport function calculateQuadrantAsPercentage(overlayType, x, y, width, height, threshold) {\n  const xp = 100 * x / width;\n  const yp = 100 * y / height;\n  if (overlayType.has('left') && xp < threshold) {\n    return 'left';\n  }\n  if (overlayType.has('right') && xp > 100 - threshold) {\n    return 'right';\n  }\n  if (overlayType.has('top') && yp < threshold) {\n    return 'top';\n  }\n  if (overlayType.has('bottom') && yp > 100 - threshold) {\n    return 'bottom';\n  }\n  if (!overlayType.has('center')) {\n    return null;\n  }\n  return 'center';\n}\nexport function calculateQuadrantAsPixels(overlayType, x, y, width, height, threshold) {\n  if (overlayType.has('left') && x < threshold) {\n    return 'left';\n  }\n  if (overlayType.has('right') && x > width - threshold) {\n    return 'right';\n  }\n  if (overlayType.has('top') && y < threshold) {\n    return 'top';\n  }\n  if (overlayType.has('bottom') && y > height - threshold) {\n    return 'bottom';\n  }\n  if (!overlayType.has('center')) {\n    return null;\n  }\n  return 'center';\n}","map":{"version":3,"names":["toggleClass","DockviewEvent","Emitter","CompositeDisposable","DragAndDropObserver","clamp","WillShowOverlayEvent","nativeEvent","options","position","constructor","directionToPosition","direction","Error","positionToDirection","DEFAULT_ACTIVATION_SIZE","value","type","DEFAULT_SIZE","SMALL_WIDTH_BOUNDARY","SMALL_HEIGHT_BOUNDARY","Droptarget","disabled","_disabled","state","_state","element","_onDrop","onDrop","event","_onWillShowOverlay","onWillShowOverlay","_acceptedTargetZonesSet","Set","acceptedTargetZones","dnd","onDragEnter","_a","_b","_c","getOverrideTarget","call","getElements","onDragOver","e","_d","_e","_f","_g","ACTUAL_TARGET","overrideTarget","size","removeDropTarget","target","getOverlayOutline","width","offsetWidth","height","offsetHeight","rect","currentTarget","getBoundingClientRect","x","clientX","left","y","clientY","top","quadrant","calculateQuadrant","isAlreadyUsed","canDisplayOverlay","willShowOverlayEvent","fire","defaultPrevented","markAsUsed","targetElement","document","createElement","className","overlayElement","appendChild","classList","add","append","toggleClasses","onDragLeave","onDragEnd","stopPropagation","clear","preventDefault","addDisposables","setTargetZones","setOverlayModel","model","overlayModel","dispose","USED_EVENT_ID","isSmallX","isSmallY","isLeft","isRight","isTop","isBottom","rightClass","leftClass","topClass","bottomClass","sizeOptions","outlineEl","elBox","ta","undefined","el","root","overlay","bigbox","rootTop","rootLeft","box","topPx","Math","round","leftPx","widthPx","heightPx","style","visibility","changed","setTimeout","overlayType","activationSizeOptions","activationSize","isPercentage","calculateQuadrantAsPercentage","calculateQuadrantAsPixels","parentElement","remove","threshold","xp","yp","has"],"sources":["E:/dockview.demo/node_modules/dockview-core/dist/esm/dnd/droptarget.js"],"sourcesContent":["import { toggleClass } from '../dom';\nimport { DockviewEvent, Emitter } from '../events';\nimport { CompositeDisposable } from '../lifecycle';\nimport { DragAndDropObserver } from './dnd';\nimport { clamp } from '../math';\nexport class WillShowOverlayEvent extends DockviewEvent {\n    get nativeEvent() {\n        return this.options.nativeEvent;\n    }\n    get position() {\n        return this.options.position;\n    }\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n}\nexport function directionToPosition(direction) {\n    switch (direction) {\n        case 'above':\n            return 'top';\n        case 'below':\n            return 'bottom';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'within':\n            return 'center';\n        default:\n            throw new Error(`invalid direction '${direction}'`);\n    }\n}\nexport function positionToDirection(position) {\n    switch (position) {\n        case 'top':\n            return 'above';\n        case 'bottom':\n            return 'below';\n        case 'left':\n            return 'left';\n        case 'right':\n            return 'right';\n        case 'center':\n            return 'within';\n        default:\n            throw new Error(`invalid position '${position}'`);\n    }\n}\nconst DEFAULT_ACTIVATION_SIZE = {\n    value: 20,\n    type: 'percentage',\n};\nconst DEFAULT_SIZE = {\n    value: 50,\n    type: 'percentage',\n};\nconst SMALL_WIDTH_BOUNDARY = 100;\nconst SMALL_HEIGHT_BOUNDARY = 100;\nexport class Droptarget extends CompositeDisposable {\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n    }\n    get state() {\n        return this._state;\n    }\n    constructor(element, options) {\n        super();\n        this.element = element;\n        this.options = options;\n        this._onDrop = new Emitter();\n        this.onDrop = this._onDrop.event;\n        this._onWillShowOverlay = new Emitter();\n        this.onWillShowOverlay = this._onWillShowOverlay.event;\n        this._disabled = false;\n        // use a set to take advantage of #<set>.has\n        this._acceptedTargetZonesSet = new Set(this.options.acceptedTargetZones);\n        this.dnd = new DragAndDropObserver(this.element, {\n            onDragEnter: () => {\n                var _a, _b, _c;\n                (_c = (_b = (_a = this.options).getOverrideTarget) === null || _b === void 0 ? void 0 : _b.call(_a)) === null || _c === void 0 ? void 0 : _c.getElements();\n            },\n            onDragOver: (e) => {\n                var _a, _b, _c, _d, _e, _f, _g;\n                Droptarget.ACTUAL_TARGET = this;\n                const overrideTarget = (_b = (_a = this.options).getOverrideTarget) === null || _b === void 0 ? void 0 : _b.call(_a);\n                if (this._acceptedTargetZonesSet.size === 0) {\n                    if (overrideTarget) {\n                        return;\n                    }\n                    this.removeDropTarget();\n                    return;\n                }\n                const target = (_e = (_d = (_c = this.options).getOverlayOutline) === null || _d === void 0 ? void 0 : _d.call(_c)) !== null && _e !== void 0 ? _e : this.element;\n                const width = target.offsetWidth;\n                const height = target.offsetHeight;\n                if (width === 0 || height === 0) {\n                    return; // avoid div!0\n                }\n                const rect = e.currentTarget.getBoundingClientRect();\n                const x = ((_f = e.clientX) !== null && _f !== void 0 ? _f : 0) - rect.left;\n                const y = ((_g = e.clientY) !== null && _g !== void 0 ? _g : 0) - rect.top;\n                const quadrant = this.calculateQuadrant(this._acceptedTargetZonesSet, x, y, width, height);\n                /**\n                 * If the event has already been used by another DropTarget instance\n                 * then don't show a second drop target, only one target should be\n                 * active at any one time\n                 */\n                if (this.isAlreadyUsed(e) || quadrant === null) {\n                    // no drop target should be displayed\n                    this.removeDropTarget();\n                    return;\n                }\n                if (!this.options.canDisplayOverlay(e, quadrant)) {\n                    if (overrideTarget) {\n                        return;\n                    }\n                    this.removeDropTarget();\n                    return;\n                }\n                const willShowOverlayEvent = new WillShowOverlayEvent({\n                    nativeEvent: e,\n                    position: quadrant,\n                });\n                /**\n                 * Provide an opportunity to prevent the overlay appearing and in turn\n                 * any dnd behaviours\n                 */\n                this._onWillShowOverlay.fire(willShowOverlayEvent);\n                if (willShowOverlayEvent.defaultPrevented) {\n                    this.removeDropTarget();\n                    return;\n                }\n                this.markAsUsed(e);\n                if (overrideTarget) {\n                    //\n                }\n                else if (!this.targetElement) {\n                    this.targetElement = document.createElement('div');\n                    this.targetElement.className = 'dv-drop-target-dropzone';\n                    this.overlayElement = document.createElement('div');\n                    this.overlayElement.className = 'dv-drop-target-selection';\n                    this._state = 'center';\n                    this.targetElement.appendChild(this.overlayElement);\n                    target.classList.add('dv-drop-target');\n                    target.append(this.targetElement);\n                    // this.overlayElement.style.opacity = '0';\n                    // requestAnimationFrame(() => {\n                    //     if (this.overlayElement) {\n                    //         this.overlayElement.style.opacity = '';\n                    //     }\n                    // });\n                }\n                this.toggleClasses(quadrant, width, height);\n                this._state = quadrant;\n            },\n            onDragLeave: () => {\n                var _a, _b;\n                const target = (_b = (_a = this.options).getOverrideTarget) === null || _b === void 0 ? void 0 : _b.call(_a);\n                if (target) {\n                    return;\n                }\n                this.removeDropTarget();\n            },\n            onDragEnd: (e) => {\n                var _a, _b;\n                const target = (_b = (_a = this.options).getOverrideTarget) === null || _b === void 0 ? void 0 : _b.call(_a);\n                if (target && Droptarget.ACTUAL_TARGET === this) {\n                    if (this._state) {\n                        // only stop the propagation of the event if we are dealing with it\n                        // which is only when the target has state\n                        e.stopPropagation();\n                        this._onDrop.fire({\n                            position: this._state,\n                            nativeEvent: e,\n                        });\n                    }\n                }\n                this.removeDropTarget();\n                target === null || target === void 0 ? void 0 : target.clear();\n            },\n            onDrop: (e) => {\n                var _a, _b, _c;\n                e.preventDefault();\n                const state = this._state;\n                this.removeDropTarget();\n                (_c = (_b = (_a = this.options).getOverrideTarget) === null || _b === void 0 ? void 0 : _b.call(_a)) === null || _c === void 0 ? void 0 : _c.clear();\n                if (state) {\n                    // only stop the propagation of the event if we are dealing with it\n                    // which is only when the target has state\n                    e.stopPropagation();\n                    this._onDrop.fire({ position: state, nativeEvent: e });\n                }\n            },\n        });\n        this.addDisposables(this._onDrop, this._onWillShowOverlay, this.dnd);\n    }\n    setTargetZones(acceptedTargetZones) {\n        this._acceptedTargetZonesSet = new Set(acceptedTargetZones);\n    }\n    setOverlayModel(model) {\n        this.options.overlayModel = model;\n    }\n    dispose() {\n        this.removeDropTarget();\n        super.dispose();\n    }\n    /**\n     * Add a property to the event object for other potential listeners to check\n     */\n    markAsUsed(event) {\n        event[Droptarget.USED_EVENT_ID] = true;\n    }\n    /**\n     * Check is the event has already been used by another instance of DropTarget\n     */\n    isAlreadyUsed(event) {\n        const value = event[Droptarget.USED_EVENT_ID];\n        return typeof value === 'boolean' && value;\n    }\n    toggleClasses(quadrant, width, height) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        const target = (_b = (_a = this.options).getOverrideTarget) === null || _b === void 0 ? void 0 : _b.call(_a);\n        if (!target && !this.overlayElement) {\n            return;\n        }\n        const isSmallX = width < SMALL_WIDTH_BOUNDARY;\n        const isSmallY = height < SMALL_HEIGHT_BOUNDARY;\n        const isLeft = quadrant === 'left';\n        const isRight = quadrant === 'right';\n        const isTop = quadrant === 'top';\n        const isBottom = quadrant === 'bottom';\n        const rightClass = !isSmallX && isRight;\n        const leftClass = !isSmallX && isLeft;\n        const topClass = !isSmallY && isTop;\n        const bottomClass = !isSmallY && isBottom;\n        let size = 1;\n        const sizeOptions = (_d = (_c = this.options.overlayModel) === null || _c === void 0 ? void 0 : _c.size) !== null && _d !== void 0 ? _d : DEFAULT_SIZE;\n        if (sizeOptions.type === 'percentage') {\n            size = clamp(sizeOptions.value, 0, 100) / 100;\n        }\n        else {\n            if (rightClass || leftClass) {\n                size = clamp(0, sizeOptions.value, width) / width;\n            }\n            if (topClass || bottomClass) {\n                size = clamp(0, sizeOptions.value, height) / height;\n            }\n        }\n        if (target) {\n            const outlineEl = (_g = (_f = (_e = this.options).getOverlayOutline) === null || _f === void 0 ? void 0 : _f.call(_e)) !== null && _g !== void 0 ? _g : this.element;\n            const elBox = outlineEl.getBoundingClientRect();\n            const ta = target.getElements(undefined, outlineEl);\n            const el = ta.root;\n            const overlay = ta.overlay;\n            const bigbox = el.getBoundingClientRect();\n            const rootTop = elBox.top - bigbox.top;\n            const rootLeft = elBox.left - bigbox.left;\n            const box = {\n                top: rootTop,\n                left: rootLeft,\n                width: width,\n                height: height,\n            };\n            if (rightClass) {\n                box.left = rootLeft + width * (1 - size);\n                box.width = width * size;\n            }\n            else if (leftClass) {\n                box.width = width * size;\n            }\n            else if (topClass) {\n                box.height = height * size;\n            }\n            else if (bottomClass) {\n                box.top = rootTop + height * (1 - size);\n                box.height = height * size;\n            }\n            if (isSmallX && isLeft) {\n                box.width = 4;\n            }\n            if (isSmallX && isRight) {\n                box.left = rootLeft + width - 4;\n                box.width = 4;\n            }\n            const topPx = `${Math.round(box.top)}px`;\n            const leftPx = `${Math.round(box.left)}px`;\n            const widthPx = `${Math.round(box.width)}px`;\n            const heightPx = `${Math.round(box.height)}px`;\n            if (overlay.style.top === topPx &&\n                overlay.style.left === leftPx &&\n                overlay.style.width === widthPx &&\n                overlay.style.height === heightPx) {\n                return;\n            }\n            overlay.style.top = topPx;\n            overlay.style.left = leftPx;\n            overlay.style.width = widthPx;\n            overlay.style.height = heightPx;\n            overlay.style.visibility = 'visible';\n            overlay.className = `dv-drop-target-anchor${this.options.className ? ` ${this.options.className}` : ''}`;\n            toggleClass(overlay, 'dv-drop-target-left', isLeft);\n            toggleClass(overlay, 'dv-drop-target-right', isRight);\n            toggleClass(overlay, 'dv-drop-target-top', isTop);\n            toggleClass(overlay, 'dv-drop-target-bottom', isBottom);\n            toggleClass(overlay, 'dv-drop-target-center', quadrant === 'center');\n            if (ta.changed) {\n                toggleClass(overlay, 'dv-drop-target-anchor-container-changed', true);\n                setTimeout(() => {\n                    toggleClass(overlay, 'dv-drop-target-anchor-container-changed', false);\n                }, 10);\n            }\n            return;\n        }\n        if (!this.overlayElement) {\n            return;\n        }\n        const box = { top: '0px', left: '0px', width: '100%', height: '100%' };\n        /**\n         * You can also achieve the overlay placement using the transform CSS property\n         * to translate and scale the element however this has the undesired effect of\n         * 'skewing' the element. Comment left here for anybody that ever revisits this.\n         *\n         * @see https://developer.mozilla.org/en-US/docs/Web/CSS/transform\n         *\n         * right\n         * translateX(${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * left\n         * translateX(-${100 * (1 - size) / 2}%) scaleX(${scale})\n         *\n         * top\n         * translateY(-${100 * (1 - size) / 2}%) scaleY(${scale})\n         *\n         * bottom\n         * translateY(${100 * (1 - size) / 2}%) scaleY(${scale})\n         */\n        if (rightClass) {\n            box.left = `${100 * (1 - size)}%`;\n            box.width = `${100 * size}%`;\n        }\n        else if (leftClass) {\n            box.width = `${100 * size}%`;\n        }\n        else if (topClass) {\n            box.height = `${100 * size}%`;\n        }\n        else if (bottomClass) {\n            box.top = `${100 * (1 - size)}%`;\n            box.height = `${100 * size}%`;\n        }\n        this.overlayElement.style.top = box.top;\n        this.overlayElement.style.left = box.left;\n        this.overlayElement.style.width = box.width;\n        this.overlayElement.style.height = box.height;\n        toggleClass(this.overlayElement, 'dv-drop-target-small-vertical', isSmallY);\n        toggleClass(this.overlayElement, 'dv-drop-target-small-horizontal', isSmallX);\n        toggleClass(this.overlayElement, 'dv-drop-target-left', isLeft);\n        toggleClass(this.overlayElement, 'dv-drop-target-right', isRight);\n        toggleClass(this.overlayElement, 'dv-drop-target-top', isTop);\n        toggleClass(this.overlayElement, 'dv-drop-target-bottom', isBottom);\n        toggleClass(this.overlayElement, 'dv-drop-target-center', quadrant === 'center');\n    }\n    calculateQuadrant(overlayType, x, y, width, height) {\n        var _a, _b;\n        const activationSizeOptions = (_b = (_a = this.options.overlayModel) === null || _a === void 0 ? void 0 : _a.activationSize) !== null && _b !== void 0 ? _b : DEFAULT_ACTIVATION_SIZE;\n        const isPercentage = activationSizeOptions.type === 'percentage';\n        if (isPercentage) {\n            return calculateQuadrantAsPercentage(overlayType, x, y, width, height, activationSizeOptions.value);\n        }\n        return calculateQuadrantAsPixels(overlayType, x, y, width, height, activationSizeOptions.value);\n    }\n    removeDropTarget() {\n        var _a;\n        if (this.targetElement) {\n            this._state = undefined;\n            (_a = this.targetElement.parentElement) === null || _a === void 0 ? void 0 : _a.classList.remove('dv-drop-target');\n            this.targetElement.remove();\n            this.targetElement = undefined;\n            this.overlayElement = undefined;\n        }\n    }\n}\nDroptarget.USED_EVENT_ID = '__dockview_droptarget_event_is_used__';\nexport function calculateQuadrantAsPercentage(overlayType, x, y, width, height, threshold) {\n    const xp = (100 * x) / width;\n    const yp = (100 * y) / height;\n    if (overlayType.has('left') && xp < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && xp > 100 - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && yp < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && yp > 100 - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\nexport function calculateQuadrantAsPixels(overlayType, x, y, width, height, threshold) {\n    if (overlayType.has('left') && x < threshold) {\n        return 'left';\n    }\n    if (overlayType.has('right') && x > width - threshold) {\n        return 'right';\n    }\n    if (overlayType.has('top') && y < threshold) {\n        return 'top';\n    }\n    if (overlayType.has('bottom') && y > height - threshold) {\n        return 'bottom';\n    }\n    if (!overlayType.has('center')) {\n        return null;\n    }\n    return 'center';\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}